{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computeCreatorOffset = exports.MAX_CREATOR_LEN = exports.MAX_URI_LENGTH = exports.MAX_SYMBOL_LENGTH = exports.MAX_NAME_LENGTH = exports.Metadata = exports.MetadataData = exports.MetadataDataData = exports.Creator = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst bs58_1 = __importDefault(require(\"bs58\"));\n\nconst buffer_1 = require(\"buffer\");\n\nconst MetadataProgram_1 = require(\"../MetadataProgram\");\n\nconst Edition_1 = require(\"./Edition\");\n\nconst MasterEdition_1 = require(\"./MasterEdition\");\n\nclass Creator extends mpl_core_1.Borsh.Data {}\n\nexports.Creator = Creator;\nCreator.SCHEMA = Creator.struct([['address', 'pubkeyAsString'], ['verified', 'u8'], ['share', 'u8']]);\n\nclass MetadataDataData extends mpl_core_1.Borsh.Data {\n  constructor(args) {\n    super(args);\n    const METADATA_REPLACE = new RegExp('\\u0000', 'g');\n    this.name = args.name.replace(METADATA_REPLACE, '');\n    this.uri = args.uri.replace(METADATA_REPLACE, '');\n    this.symbol = args.symbol.replace(METADATA_REPLACE, '');\n  }\n\n}\n\nexports.MetadataDataData = MetadataDataData;\nMetadataDataData.SCHEMA = new Map([...Creator.SCHEMA, ...MetadataDataData.struct([['name', 'string'], ['symbol', 'string'], ['uri', 'string'], ['sellerFeeBasisPoints', 'u16'], ['creators', {\n  kind: 'option',\n  type: [Creator]\n}]])]);\n\nclass MetadataData extends mpl_core_1.Borsh.Data {\n  constructor(args) {\n    super(args);\n    this.key = MetadataProgram_1.MetadataKey.MetadataV1;\n  }\n\n}\n\nexports.MetadataData = MetadataData;\nMetadataData.SCHEMA = new Map([...MetadataDataData.SCHEMA, ...MetadataData.struct([['key', 'u8'], ['updateAuthority', 'pubkeyAsString'], ['mint', 'pubkeyAsString'], ['data', MetadataDataData], ['primarySaleHappened', 'u8'], ['isMutable', 'u8']])]);\n\nclass Metadata extends mpl_core_1.Account {\n  constructor(pubkey, info) {\n    super(pubkey, info);\n\n    if (!this.assertOwner(MetadataProgram_1.MetadataProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!Metadata.isCompatible(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = MetadataData.deserialize(this.info.data);\n  }\n\n  static isCompatible(data) {\n    return data[0] === MetadataProgram_1.MetadataKey.MetadataV1;\n  }\n\n  static getPDA(mint) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return MetadataProgram_1.MetadataProgram.findProgramAddress([buffer_1.Buffer.from(MetadataProgram_1.MetadataProgram.PREFIX), MetadataProgram_1.MetadataProgram.PUBKEY.toBuffer(), new web3_js_1.PublicKey(mint).toBuffer()]);\n    });\n  }\n\n  static findMany(connection) {\n    let filters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return __awaiter(this, void 0, void 0, function* () {\n      const baseFilters = [{\n        memcmp: {\n          offset: 0,\n          bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetadataProgram_1.MetadataKey.MetadataV1]))\n        }\n      }, filters.updateAuthority && {\n        memcmp: {\n          offset: 1,\n          bytes: new web3_js_1.PublicKey(filters.updateAuthority).toBase58()\n        }\n      }, filters.mint && {\n        memcmp: {\n          offset: 33,\n          bytes: new web3_js_1.PublicKey(filters.mint).toBase58()\n        }\n      }].filter(Boolean);\n\n      if (filters.creators) {\n        return (yield Promise.all(Array.from(Array(mpl_core_1.config.maxCreatorLimit).keys()).reduce((prev, i) => [...prev, ...filters.creators.map(pubkey => MetadataProgram_1.MetadataProgram.getProgramAccounts(connection, {\n          filters: [...baseFilters, {\n            memcmp: {\n              offset: (0, exports.computeCreatorOffset)(i),\n              bytes: new web3_js_1.PublicKey(pubkey).toBase58()\n            }\n          }]\n        }))], []))).flat().map(account => Metadata.from(account));\n      } else {\n        return (yield MetadataProgram_1.MetadataProgram.getProgramAccounts(connection, {\n          filters: baseFilters\n        })).map(account => Metadata.from(account));\n      }\n    });\n  }\n\n  static findByOwner(connection, owner) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const accounts = yield mpl_core_1.TokenAccount.getTokenAccountsByOwner(connection, owner);\n      const accountMap = new Map(accounts.map(_ref => {\n        let {\n          data\n        } = _ref;\n        return [data.mint.toString(), data];\n      }));\n      const allMetadata = yield Metadata.findMany(connection);\n      return allMetadata.filter(metadata => {\n        var _a, _b;\n\n        return accountMap.has(metadata.data.mint) && (((_b = (_a = accountMap === null || accountMap === void 0 ? void 0 : accountMap.get(metadata.data.mint)) === null || _a === void 0 ? void 0 : _a.amount) === null || _b === void 0 ? void 0 : _b.toNumber()) || 0) > 0;\n      });\n    });\n  }\n\n  static findByOwnerV2(connection, owner) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const accounts = yield mpl_core_1.TokenAccount.getTokenAccountsByOwner(connection, owner);\n      const accountsWithAmount = accounts.map(_ref2 => {\n        let {\n          data\n        } = _ref2;\n        return data;\n      }).filter(_ref3 => {\n        let {\n          amount\n        } = _ref3;\n        return (amount === null || amount === void 0 ? void 0 : amount.toNumber()) > 0;\n      });\n      return (yield Promise.all(accountsWithAmount.map(_ref4 => {\n        let {\n          mint\n        } = _ref4;\n        return Metadata.findMany(connection, {\n          mint\n        });\n      }))).flat();\n    });\n  }\n\n  static findDataByOwner(connection, owner) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const accounts = yield mpl_core_1.TokenAccount.getTokenAccountsByOwner(connection, owner);\n      const metadataPdaLookups = accounts.reduce((memo, _ref5) => {\n        let {\n          data\n        } = _ref5;\n\n        var _a;\n\n        return ((_a = data.amount) === null || _a === void 0 ? void 0 : _a.eq(new bn_js_1.default(1))) ? [...memo, Metadata.getPDA(data.mint)] : memo;\n      }, []);\n      const metadataAddresses = yield Promise.all(metadataPdaLookups);\n      const tokenInfo = yield mpl_core_1.Account.getInfos(connection, metadataAddresses);\n      return Array.from(tokenInfo.values()).map(m => MetadataData.deserialize(m.data));\n    });\n  }\n\n  static getEdition(connection, mint) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const pda = yield Edition_1.Edition.getPDA(mint);\n      const info = yield mpl_core_1.Account.getInfo(connection, pda);\n      const key = info === null || info === void 0 ? void 0 : info.data[0];\n\n      switch (key) {\n        case MetadataProgram_1.MetadataKey.EditionV1:\n          return new Edition_1.Edition(pda, info);\n\n        case MetadataProgram_1.MetadataKey.MasterEditionV1:\n        case MetadataProgram_1.MetadataKey.MasterEditionV2:\n          return new MasterEdition_1.MasterEdition(pda, info);\n\n        default:\n          return;\n      }\n    });\n  }\n\n}\n\nexports.Metadata = Metadata;\nexports.MAX_NAME_LENGTH = 32;\nexports.MAX_SYMBOL_LENGTH = 10;\nexports.MAX_URI_LENGTH = 200;\nexports.MAX_CREATOR_LEN = 32 + 1 + 1;\n\nconst computeCreatorOffset = index => {\n  return 1 + 32 + 32 + 4 + exports.MAX_NAME_LENGTH + 4 + exports.MAX_URI_LENGTH + 4 + exports.MAX_SYMBOL_LENGTH + 2 + 1 + 4 + index * exports.MAX_CREATOR_LEN;\n};\n\nexports.computeCreatorOffset = computeCreatorOffset;","map":{"version":3,"sources":["../../../src/accounts/Metadata.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeCreatorOffset = exports.MAX_CREATOR_LEN = exports.MAX_URI_LENGTH = exports.MAX_SYMBOL_LENGTH = exports.MAX_NAME_LENGTH = exports.Metadata = exports.MetadataData = exports.MetadataDataData = exports.Creator = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst buffer_1 = require(\"buffer\");\nconst MetadataProgram_1 = require(\"../MetadataProgram\");\nconst Edition_1 = require(\"./Edition\");\nconst MasterEdition_1 = require(\"./MasterEdition\");\nclass Creator extends mpl_core_1.Borsh.Data {\n}\nexports.Creator = Creator;\nCreator.SCHEMA = Creator.struct([\n    ['address', 'pubkeyAsString'],\n    ['verified', 'u8'],\n    ['share', 'u8'],\n]);\nclass MetadataDataData extends mpl_core_1.Borsh.Data {\n    constructor(args) {\n        super(args);\n        const METADATA_REPLACE = new RegExp('\\u0000', 'g');\n        this.name = args.name.replace(METADATA_REPLACE, '');\n        this.uri = args.uri.replace(METADATA_REPLACE, '');\n        this.symbol = args.symbol.replace(METADATA_REPLACE, '');\n    }\n}\nexports.MetadataDataData = MetadataDataData;\nMetadataDataData.SCHEMA = new Map([\n    ...Creator.SCHEMA,\n    ...MetadataDataData.struct([\n        ['name', 'string'],\n        ['symbol', 'string'],\n        ['uri', 'string'],\n        ['sellerFeeBasisPoints', 'u16'],\n        ['creators', { kind: 'option', type: [Creator] }],\n    ]),\n]);\nclass MetadataData extends mpl_core_1.Borsh.Data {\n    constructor(args) {\n        super(args);\n        this.key = MetadataProgram_1.MetadataKey.MetadataV1;\n    }\n}\nexports.MetadataData = MetadataData;\nMetadataData.SCHEMA = new Map([\n    ...MetadataDataData.SCHEMA,\n    ...MetadataData.struct([\n        ['key', 'u8'],\n        ['updateAuthority', 'pubkeyAsString'],\n        ['mint', 'pubkeyAsString'],\n        ['data', MetadataDataData],\n        ['primarySaleHappened', 'u8'],\n        ['isMutable', 'u8'],\n    ]),\n]);\nclass Metadata extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(MetadataProgram_1.MetadataProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!Metadata.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = MetadataData.deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data[0] === MetadataProgram_1.MetadataKey.MetadataV1;\n    }\n    static getPDA(mint) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return MetadataProgram_1.MetadataProgram.findProgramAddress([\n                buffer_1.Buffer.from(MetadataProgram_1.MetadataProgram.PREFIX),\n                MetadataProgram_1.MetadataProgram.PUBKEY.toBuffer(),\n                new web3_js_1.PublicKey(mint).toBuffer(),\n            ]);\n        });\n    }\n    static findMany(connection, filters = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const baseFilters = [\n                {\n                    memcmp: {\n                        offset: 0,\n                        bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetadataProgram_1.MetadataKey.MetadataV1])),\n                    },\n                },\n                filters.updateAuthority && {\n                    memcmp: {\n                        offset: 1,\n                        bytes: new web3_js_1.PublicKey(filters.updateAuthority).toBase58(),\n                    },\n                },\n                filters.mint && {\n                    memcmp: {\n                        offset: 33,\n                        bytes: new web3_js_1.PublicKey(filters.mint).toBase58(),\n                    },\n                },\n            ].filter(Boolean);\n            if (filters.creators) {\n                return (yield Promise.all(Array.from(Array(mpl_core_1.config.maxCreatorLimit).keys()).reduce((prev, i) => [\n                    ...prev,\n                    ...filters.creators.map((pubkey) => MetadataProgram_1.MetadataProgram.getProgramAccounts(connection, {\n                        filters: [\n                            ...baseFilters,\n                            {\n                                memcmp: {\n                                    offset: (0, exports.computeCreatorOffset)(i),\n                                    bytes: new web3_js_1.PublicKey(pubkey).toBase58(),\n                                },\n                            },\n                        ],\n                    })),\n                ], [])))\n                    .flat()\n                    .map((account) => Metadata.from(account));\n            }\n            else {\n                return (yield MetadataProgram_1.MetadataProgram.getProgramAccounts(connection, { filters: baseFilters })).map((account) => Metadata.from(account));\n            }\n        });\n    }\n    static findByOwner(connection, owner) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accounts = yield mpl_core_1.TokenAccount.getTokenAccountsByOwner(connection, owner);\n            const accountMap = new Map(accounts.map(({ data }) => [data.mint.toString(), data]));\n            const allMetadata = yield Metadata.findMany(connection);\n            return allMetadata.filter((metadata) => {\n                var _a, _b;\n                return accountMap.has(metadata.data.mint) &&\n                    (((_b = (_a = accountMap === null || accountMap === void 0 ? void 0 : accountMap.get(metadata.data.mint)) === null || _a === void 0 ? void 0 : _a.amount) === null || _b === void 0 ? void 0 : _b.toNumber()) || 0) > 0;\n            });\n        });\n    }\n    static findByOwnerV2(connection, owner) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accounts = yield mpl_core_1.TokenAccount.getTokenAccountsByOwner(connection, owner);\n            const accountsWithAmount = accounts\n                .map(({ data }) => data)\n                .filter(({ amount }) => (amount === null || amount === void 0 ? void 0 : amount.toNumber()) > 0);\n            return (yield Promise.all(accountsWithAmount.map(({ mint }) => Metadata.findMany(connection, { mint })))).flat();\n        });\n    }\n    static findDataByOwner(connection, owner) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accounts = yield mpl_core_1.TokenAccount.getTokenAccountsByOwner(connection, owner);\n            const metadataPdaLookups = accounts.reduce((memo, { data }) => {\n                var _a;\n                return ((_a = data.amount) === null || _a === void 0 ? void 0 : _a.eq(new bn_js_1.default(1))) ? [...memo, Metadata.getPDA(data.mint)] : memo;\n            }, []);\n            const metadataAddresses = yield Promise.all(metadataPdaLookups);\n            const tokenInfo = yield mpl_core_1.Account.getInfos(connection, metadataAddresses);\n            return Array.from(tokenInfo.values()).map((m) => MetadataData.deserialize(m.data));\n        });\n    }\n    static getEdition(connection, mint) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const pda = yield Edition_1.Edition.getPDA(mint);\n            const info = yield mpl_core_1.Account.getInfo(connection, pda);\n            const key = info === null || info === void 0 ? void 0 : info.data[0];\n            switch (key) {\n                case MetadataProgram_1.MetadataKey.EditionV1:\n                    return new Edition_1.Edition(pda, info);\n                case MetadataProgram_1.MetadataKey.MasterEditionV1:\n                case MetadataProgram_1.MetadataKey.MasterEditionV2:\n                    return new MasterEdition_1.MasterEdition(pda, info);\n                default:\n                    return;\n            }\n        });\n    }\n}\nexports.Metadata = Metadata;\nexports.MAX_NAME_LENGTH = 32;\nexports.MAX_SYMBOL_LENGTH = 10;\nexports.MAX_URI_LENGTH = 200;\nexports.MAX_CREATOR_LEN = 32 + 1 + 1;\nconst computeCreatorOffset = (index) => {\n    return (1 +\n        32 +\n        32 +\n        4 +\n        exports.MAX_NAME_LENGTH +\n        4 +\n        exports.MAX_URI_LENGTH +\n        4 +\n        exports.MAX_SYMBOL_LENGTH +\n        2 +\n        1 +\n        4 +\n        index * exports.MAX_CREATOR_LEN);\n};\nexports.computeCreatorOffset = computeCreatorOffset;\n//# sourceMappingURL=Metadata.js.map"]},"metadata":{},"sourceType":"script"}