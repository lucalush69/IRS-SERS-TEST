{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CancelBid = exports.CancelBidArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst spl_token_1 = require(\"@solana/spl-token\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst AuctionProgram_1 = require(\"../AuctionProgram\");\n\nclass CancelBidArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = 0;\n  }\n\n}\n\nexports.CancelBidArgs = CancelBidArgs;\nCancelBidArgs.SCHEMA = CancelBidArgs.struct([['instruction', 'u8'], ['resource', 'pubkeyAsString']]);\n\nclass CancelBid extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      auction,\n      auctionExtended,\n      bidderPot,\n      bidderMeta,\n      bidder,\n      bidderToken,\n      bidderPotToken,\n      tokenMint,\n      resource\n    } = params;\n    const data = CancelBidArgs.serialize({\n      resource: resource.toString()\n    });\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: bidder,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: bidderToken,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: bidderPot,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: bidderPotToken,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: bidderMeta,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: auction,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: auctionExtended,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: tokenMint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: AuctionProgram_1.AuctionProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.CancelBid = CancelBid;","map":{"version":3,"sources":["../../../src/transactions/CancelBid.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancelBid = exports.CancelBidArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst AuctionProgram_1 = require(\"../AuctionProgram\");\nclass CancelBidArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 0;\n    }\n}\nexports.CancelBidArgs = CancelBidArgs;\nCancelBidArgs.SCHEMA = CancelBidArgs.struct([\n    ['instruction', 'u8'],\n    ['resource', 'pubkeyAsString'],\n]);\nclass CancelBid extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { auction, auctionExtended, bidderPot, bidderMeta, bidder, bidderToken, bidderPotToken, tokenMint, resource, } = params;\n        const data = CancelBidArgs.serialize({ resource: resource.toString() });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: bidder,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: bidderToken,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: bidderPot,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: bidderPotToken,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: bidderMeta,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auctionExtended,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: tokenMint,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SystemProgram.programId,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: AuctionProgram_1.AuctionProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.CancelBid = CancelBid;\n//# sourceMappingURL=CancelBid.js.map"]},"metadata":{},"sourceType":"script"}