{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SafetyDepositConfig = exports.NonWinningConstraint = exports.WinningConstraint = exports.WinningConfigType = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst bs58_1 = __importDefault(require(\"bs58\"));\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\n\nconst buffer_1 = require(\"buffer\");\n\nvar WinningConfigType;\n\n(function (WinningConfigType) {\n  WinningConfigType[WinningConfigType[\"TokenOnlyTransfer\"] = 0] = \"TokenOnlyTransfer\";\n  WinningConfigType[WinningConfigType[\"FullRightsTransfer\"] = 1] = \"FullRightsTransfer\";\n  WinningConfigType[WinningConfigType[\"PrintingV1\"] = 2] = \"PrintingV1\";\n  WinningConfigType[WinningConfigType[\"PrintingV2\"] = 3] = \"PrintingV2\";\n  WinningConfigType[WinningConfigType[\"Participation\"] = 4] = \"Participation\";\n})(WinningConfigType = exports.WinningConfigType || (exports.WinningConfigType = {}));\n\nvar WinningConstraint;\n\n(function (WinningConstraint) {\n  WinningConstraint[WinningConstraint[\"NoParticipationPrize\"] = 0] = \"NoParticipationPrize\";\n  WinningConstraint[WinningConstraint[\"ParticipationPrizeGiven\"] = 1] = \"ParticipationPrizeGiven\";\n})(WinningConstraint = exports.WinningConstraint || (exports.WinningConstraint = {}));\n\nvar NonWinningConstraint;\n\n(function (NonWinningConstraint) {\n  NonWinningConstraint[NonWinningConstraint[\"NoParticipationPrize\"] = 0] = \"NoParticipationPrize\";\n  NonWinningConstraint[NonWinningConstraint[\"GivenForFixedPrice\"] = 1] = \"GivenForFixedPrice\";\n  NonWinningConstraint[NonWinningConstraint[\"GivenForBidPrice\"] = 2] = \"GivenForBidPrice\";\n})(NonWinningConstraint = exports.NonWinningConstraint || (exports.NonWinningConstraint = {}));\n\nclass SafetyDepositConfig extends mpl_core_1.Account {\n  constructor(pubkey, info) {\n    super(pubkey, info);\n\n    if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!SafetyDepositConfig.isCompatible(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = deserialize(this.info.data);\n  }\n\n  static isCompatible(data) {\n    return data[0] === MetaplexProgram_1.MetaplexKey.SafetyDepositConfigV1;\n  }\n\n  static getPDA(auctionManager, safetyDeposit) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return MetaplexProgram_1.MetaplexProgram.findProgramAddress([buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX), MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(), new web3_js_1.PublicKey(auctionManager).toBuffer(), new web3_js_1.PublicKey(safetyDeposit).toBuffer()]);\n    });\n  }\n\n}\n\nexports.SafetyDepositConfig = SafetyDepositConfig;\n\nconst deserialize = buffer => {\n  const data = {\n    key: MetaplexProgram_1.MetaplexKey.SafetyDepositConfigV1,\n    auctionManager: bs58_1.default.encode(buffer.slice(1, 33)),\n    order: new bn_js_1.default(buffer.slice(33, 41), 'le'),\n    winningConfigType: buffer[41],\n    amountType: buffer[42],\n    lengthType: buffer[43],\n    amountRanges: [],\n    participationConfig: null,\n    participationState: null\n  };\n  const lengthOfArray = new bn_js_1.default(buffer.slice(44, 48), 'le');\n  let offset = 48;\n\n  for (let i = 0; i < lengthOfArray.toNumber(); i++) {\n    const amount = (0, mpl_core_1.getBNFromData)(buffer, offset, data.amountType);\n    offset += data.amountType;\n    const length = (0, mpl_core_1.getBNFromData)(buffer, offset, data.lengthType);\n    offset += data.lengthType;\n    data.amountRanges.push({\n      amount,\n      length\n    });\n  }\n\n  if (buffer[offset] == 0) {\n    offset += 1;\n    data.participationConfig = null;\n  } else {\n    const winnerConstraint = buffer[offset + 1];\n    const nonWinningConstraint = buffer[offset + 2];\n    let fixedPrice = null;\n    offset += 3;\n\n    if (buffer[offset] == 1) {\n      fixedPrice = new bn_js_1.default(buffer.slice(offset + 1, offset + 9), 'le');\n      offset += 9;\n    } else {\n      offset += 1;\n    }\n\n    data.participationConfig = {\n      winnerConstraint,\n      nonWinningConstraint,\n      fixedPrice\n    };\n  }\n\n  if (buffer[offset] == 0) {\n    offset += 1;\n    data.participationState = null;\n  } else {\n    const collectedToAcceptPayment = new bn_js_1.default(buffer.slice(offset + 1, offset + 9), 'le');\n    offset += 9;\n    data.participationState = {\n      collectedToAcceptPayment\n    };\n  }\n\n  return data;\n};","map":{"version":3,"sources":["../../../src/accounts/SafetyDepositConfig.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafetyDepositConfig = exports.NonWinningConstraint = exports.WinningConstraint = exports.WinningConfigType = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nconst buffer_1 = require(\"buffer\");\nvar WinningConfigType;\n(function (WinningConfigType) {\n    WinningConfigType[WinningConfigType[\"TokenOnlyTransfer\"] = 0] = \"TokenOnlyTransfer\";\n    WinningConfigType[WinningConfigType[\"FullRightsTransfer\"] = 1] = \"FullRightsTransfer\";\n    WinningConfigType[WinningConfigType[\"PrintingV1\"] = 2] = \"PrintingV1\";\n    WinningConfigType[WinningConfigType[\"PrintingV2\"] = 3] = \"PrintingV2\";\n    WinningConfigType[WinningConfigType[\"Participation\"] = 4] = \"Participation\";\n})(WinningConfigType = exports.WinningConfigType || (exports.WinningConfigType = {}));\nvar WinningConstraint;\n(function (WinningConstraint) {\n    WinningConstraint[WinningConstraint[\"NoParticipationPrize\"] = 0] = \"NoParticipationPrize\";\n    WinningConstraint[WinningConstraint[\"ParticipationPrizeGiven\"] = 1] = \"ParticipationPrizeGiven\";\n})(WinningConstraint = exports.WinningConstraint || (exports.WinningConstraint = {}));\nvar NonWinningConstraint;\n(function (NonWinningConstraint) {\n    NonWinningConstraint[NonWinningConstraint[\"NoParticipationPrize\"] = 0] = \"NoParticipationPrize\";\n    NonWinningConstraint[NonWinningConstraint[\"GivenForFixedPrice\"] = 1] = \"GivenForFixedPrice\";\n    NonWinningConstraint[NonWinningConstraint[\"GivenForBidPrice\"] = 2] = \"GivenForBidPrice\";\n})(NonWinningConstraint = exports.NonWinningConstraint || (exports.NonWinningConstraint = {}));\nclass SafetyDepositConfig extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!SafetyDepositConfig.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.SafetyDepositConfigV1;\n    }\n    static getPDA(auctionManager, safetyDeposit) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return MetaplexProgram_1.MetaplexProgram.findProgramAddress([\n                buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX),\n                MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(),\n                new web3_js_1.PublicKey(auctionManager).toBuffer(),\n                new web3_js_1.PublicKey(safetyDeposit).toBuffer(),\n            ]);\n        });\n    }\n}\nexports.SafetyDepositConfig = SafetyDepositConfig;\nconst deserialize = (buffer) => {\n    const data = {\n        key: MetaplexProgram_1.MetaplexKey.SafetyDepositConfigV1,\n        auctionManager: bs58_1.default.encode(buffer.slice(1, 33)),\n        order: new bn_js_1.default(buffer.slice(33, 41), 'le'),\n        winningConfigType: buffer[41],\n        amountType: buffer[42],\n        lengthType: buffer[43],\n        amountRanges: [],\n        participationConfig: null,\n        participationState: null,\n    };\n    const lengthOfArray = new bn_js_1.default(buffer.slice(44, 48), 'le');\n    let offset = 48;\n    for (let i = 0; i < lengthOfArray.toNumber(); i++) {\n        const amount = (0, mpl_core_1.getBNFromData)(buffer, offset, data.amountType);\n        offset += data.amountType;\n        const length = (0, mpl_core_1.getBNFromData)(buffer, offset, data.lengthType);\n        offset += data.lengthType;\n        data.amountRanges.push({ amount, length });\n    }\n    if (buffer[offset] == 0) {\n        offset += 1;\n        data.participationConfig = null;\n    }\n    else {\n        const winnerConstraint = buffer[offset + 1];\n        const nonWinningConstraint = buffer[offset + 2];\n        let fixedPrice = null;\n        offset += 3;\n        if (buffer[offset] == 1) {\n            fixedPrice = new bn_js_1.default(buffer.slice(offset + 1, offset + 9), 'le');\n            offset += 9;\n        }\n        else {\n            offset += 1;\n        }\n        data.participationConfig = {\n            winnerConstraint,\n            nonWinningConstraint,\n            fixedPrice,\n        };\n    }\n    if (buffer[offset] == 0) {\n        offset += 1;\n        data.participationState = null;\n    }\n    else {\n        const collectedToAcceptPayment = new bn_js_1.default(buffer.slice(offset + 1, offset + 9), 'le');\n        offset += 9;\n        data.participationState = {\n            collectedToAcceptPayment,\n        };\n    }\n    return data;\n};\n//# sourceMappingURL=SafetyDepositConfig.js.map"]},"metadata":{},"sourceType":"script"}