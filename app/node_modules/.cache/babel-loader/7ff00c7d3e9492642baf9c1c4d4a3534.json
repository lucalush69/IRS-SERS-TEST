{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Account = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst buffer_1 = require(\"buffer\");\n\nconst errors_1 = require(\"../errors\");\n\nclass Account {\n  constructor(pubkey, info) {\n    this.pubkey = new web3_js_1.PublicKey(pubkey);\n    this.info = info;\n  }\n\n  static from(account) {\n    return new this(account.pubkey, account.info);\n  }\n\n  static load(connection, pubkey) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const info = yield Account.getInfo(connection, pubkey);\n      return new this(pubkey, info);\n    });\n  }\n\n  static isCompatible(_data) {\n    throw new Error(`method 'isCompatible' is not implemented`);\n  }\n\n  static getInfo(connection, pubkey) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const info = yield connection.getAccountInfo(new web3_js_1.PublicKey(pubkey));\n\n      if (!info) {\n        throw (0, errors_1.ERROR_ACCOUNT_NOT_FOUND)(pubkey);\n      }\n\n      return Object.assign(Object.assign({}, info), {\n        data: buffer_1.Buffer.from(info === null || info === void 0 ? void 0 : info.data)\n      });\n    });\n  }\n\n  static getInfos(connection, pubkeys) {\n    let commitment = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'recent';\n    return __awaiter(this, void 0, void 0, function* () {\n      const BATCH_SIZE = 99;\n      const promises = [];\n\n      for (let i = 0; i < pubkeys.length; i += BATCH_SIZE) {\n        promises.push(Account.getMultipleAccounts(connection, pubkeys.slice(i, Math.min(pubkeys.length, i + BATCH_SIZE)), commitment));\n      }\n\n      const results = new Map();\n      (yield Promise.all(promises)).forEach(result => {\n        var _a;\n\n        return [...((_a = result === null || result === void 0 ? void 0 : result.entries()) !== null && _a !== void 0 ? _a : [])].forEach(_ref => {\n          let [k, v] = _ref;\n          return results.set(k, v);\n        });\n      });\n      return results;\n    });\n  }\n\n  static getMultipleAccounts(connection, pubkeys, commitment) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const args = connection._buildArgs([pubkeys.map(k => k.toString())], commitment, 'base64');\n\n      const unsafeRes = yield connection._rpcRequest('getMultipleAccounts', args);\n\n      if (unsafeRes.error) {\n        throw new Error('failed to get info about accounts ' + unsafeRes.error.message);\n      }\n\n      if (!unsafeRes.result.value) return;\n      const infos = unsafeRes.result.value.filter(Boolean).map(info => Object.assign(Object.assign({}, info), {\n        data: buffer_1.Buffer.from(info.data[0], 'base64')\n      }));\n      return infos.reduce((acc, info, index) => {\n        acc.set(pubkeys[index], info);\n        return acc;\n      }, new Map());\n    });\n  }\n\n  assertOwner(pubkey) {\n    var _a;\n\n    return (_a = this.info) === null || _a === void 0 ? void 0 : _a.owner.equals(new web3_js_1.PublicKey(pubkey));\n  }\n\n  toJSON() {\n    var _a, _b, _c, _d, _e;\n\n    return {\n      pubkey: this.pubkey.toString(),\n      info: {\n        executable: !!((_a = this.info) === null || _a === void 0 ? void 0 : _a.executable),\n        owner: ((_b = this.info) === null || _b === void 0 ? void 0 : _b.owner) ? new web3_js_1.PublicKey((_c = this.info) === null || _c === void 0 ? void 0 : _c.owner) : null,\n        lamports: (_d = this.info) === null || _d === void 0 ? void 0 : _d.lamports,\n        data: (_e = this.info) === null || _e === void 0 ? void 0 : _e.data.toJSON()\n      },\n      data: this.data\n    };\n  }\n\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n\n}\n\nexports.Account = Account;","map":{"version":3,"sources":["../../../src/accounts/Account.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,MAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAMA,MAAa,OAAb,CAAoB;AAKlB,EAAA,WAAA,CAAY,MAAZ,EAAkC,IAAlC,EAA4D;AAC1D,SAAK,MAAL,GAAc,IAAI,SAAA,CAAA,SAAJ,CAAc,MAAd,CAAd;AACA,SAAK,IAAL,GAAY,IAAZ;AACD;;AAEU,SAAJ,IAAI,CAAiC,OAAjC,EAA0D;AACnE,WAAO,IAAI,IAAJ,CAAS,OAAO,CAAC,MAAjB,EAAyB,OAAO,CAAC,IAAjC,CAAP;AACD;;AAEgB,SAAJ,IAAI,CAEf,UAFe,EAGf,MAHe,EAGK;;AAEpB,YAAM,IAAI,GAAG,MAAM,OAAO,CAAC,OAAR,CAAgB,UAAhB,EAA4B,MAA5B,CAAnB;AAEA,aAAO,IAAI,IAAJ,CAAS,MAAT,EAAiB,IAAjB,CAAP;AACD,K;AAAA;;AAGkB,SAAZ,YAAY,CAAC,KAAD,EAAc;AAC/B,UAAM,IAAI,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAEmB,SAAP,OAAO,CAAC,UAAD,EAAyB,MAAzB,EAA6C;;AAC/D,YAAM,IAAI,GAAG,MAAM,UAAU,CAAC,cAAX,CAA0B,IAAI,SAAA,CAAA,SAAJ,CAAc,MAAd,CAA1B,CAAnB;;AACA,UAAI,CAAC,IAAL,EAAW;AACT,cAAM,CAAA,GAAA,QAAA,CAAA,uBAAA,EAAwB,MAAxB,CAAN;AACD;;AAED,aAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAY,IAAZ,CAAA,EAAgB;AAAE,QAAA,IAAI,EAAE,QAAA,CAAA,MAAA,CAAO,IAAP,CAAY,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,IAAlB;AAAR,OAAhB,CAAA;AACD,K;AAAA;;AAEoB,SAAR,QAAQ,CACnB,UADmB,EAEnB,OAFmB,EAGc;AAAA,QAAjC,UAAiC,uEAAR,QAAQ;;AAEjC,YAAM,UAAU,GAAG,EAAnB;AAEA,YAAM,QAAQ,GAAkE,EAAhF;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,IAAI,UAAzC,EAAqD;AACnD,QAAA,QAAQ,CAAC,IAAT,CACE,OAAO,CAAC,mBAAR,CACE,UADF,EAEE,OAAO,CAAC,KAAR,CAAc,CAAd,EAAiB,IAAI,CAAC,GAAL,CAAS,OAAO,CAAC,MAAjB,EAAyB,CAAC,GAAG,UAA7B,CAAjB,CAFF,EAGE,UAHF,CADF;AAOD;;AAED,YAAM,OAAO,GAAG,IAAI,GAAJ,EAAhB;AACA,OAAC,MAAM,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAP,EAA8B,OAA9B,CAAuC,MAAD,IAAW;AAAA,YAAA,EAAA;;AAC/C,eAAA,CAAC,IAAI,CAAA,EAAA,GAAA,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAM,KAAA,CAAN,GAAA,MAAM,CAAE,OAAR,EAAA,MAAiB,IAAjB,IAAiB,EAAA,KAAA,KAAA,CAAjB,GAAiB,EAAjB,GAAqB,EAAzB,CAAD,EAA+B,OAA/B,CAAuC;AAAA,cAAC,CAAC,CAAD,EAAI,CAAJ,CAAD;AAAA,iBAAY,OAAO,CAAC,GAAR,CAAY,CAAZ,EAAe,CAAf,CAAZ;AAAA,SAAvC,CAAA;AAAqE,OADvE;AAGA,aAAO,OAAP;AACD,K;AAAA;;AAEuC,SAAnB,mBAAmB,CACtC,UADsC,EAEtC,OAFsC,EAGtC,UAHsC,EAGhB;;AAEtB,YAAM,IAAI,GAAG,UAAU,CAAC,UAAX,CAAsB,CAAC,OAAO,CAAC,GAAR,CAAa,CAAD,IAAO,CAAC,CAAC,QAAF,EAAnB,CAAD,CAAtB,EAA0D,UAA1D,EAAsE,QAAtE,CAAb;;AACA,YAAM,SAAS,GAAG,MAAO,UAAwC,CAAC,WAAzC,CACvB,qBADuB,EAEvB,IAFuB,CAAzB;;AAIA,UAAI,SAAS,CAAC,KAAd,EAAqB;AACnB,cAAM,IAAI,KAAJ,CAAU,uCAAuC,SAAS,CAAC,KAAV,CAAgB,OAAjE,CAAN;AACD;;AACD,UAAI,CAAC,SAAS,CAAC,MAAV,CAAiB,KAAtB,EAA6B;AAC7B,YAAM,KAAK,GAAI,SAAS,CAAC,MAAV,CAAiB,KAAjB,CACZ,MADY,CACL,OADK,EAEZ,GAFY,CAEP,IAAD,IAAU,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,IADU,CAAA,EACN;AACP,QAAA,IAAI,EAAE,QAAA,CAAA,MAAA,CAAO,IAAP,CAAY,IAAI,CAAC,IAAL,CAAU,CAAV,CAAZ,EAA0B,QAA1B;AADC,OADM,CAFF,CAAf;AAMA,aAAO,KAAK,CAAC,MAAN,CAAa,CAAC,GAAD,EAAM,IAAN,EAAY,KAAZ,KAAqB;AACvC,QAAA,GAAG,CAAC,GAAJ,CAAQ,OAAO,CAAC,KAAD,CAAf,EAAwB,IAAxB;AACA,eAAO,GAAP;AACD,OAHM,EAGJ,IAAI,GAAJ,EAHI,CAAP;AAID,K;AAAA;;AAED,EAAA,WAAW,CAAC,MAAD,EAAqB;;;AAC9B,WAAO,CAAA,EAAA,GAAA,KAAK,IAAL,MAAS,IAAT,IAAS,EAAA,KAAA,KAAA,CAAT,GAAS,KAAA,CAAT,GAAS,EAAA,CAAE,KAAF,CAAQ,MAAR,CAAe,IAAI,SAAA,CAAA,SAAJ,CAAc,MAAd,CAAf,CAAhB;AACD;;AAED,EAAA,MAAM,GAAA;;;AACJ,WAAO;AACL,MAAA,MAAM,EAAE,KAAK,MAAL,CAAY,QAAZ,EADH;AAEL,MAAA,IAAI,EAAE;AACJ,QAAA,UAAU,EAAE,CAAC,EAAC,CAAA,EAAA,GAAA,KAAK,IAAL,MAAS,IAAT,IAAS,EAAA,KAAA,KAAA,CAAT,GAAS,KAAA,CAAT,GAAS,EAAA,CAAE,UAAZ,CADT;AAEJ,QAAA,KAAK,EAAE,CAAA,CAAA,EAAA,GAAA,KAAK,IAAL,MAAS,IAAT,IAAS,EAAA,KAAA,KAAA,CAAT,GAAS,KAAA,CAAT,GAAS,EAAA,CAAE,KAAX,IAAmB,IAAI,SAAA,CAAA,SAAJ,CAAc,CAAA,EAAA,GAAA,KAAK,IAAL,MAAS,IAAT,IAAS,EAAA,KAAA,KAAA,CAAT,GAAS,KAAA,CAAT,GAAS,EAAA,CAAE,KAAzB,CAAnB,GAAqD,IAFxD;AAGJ,QAAA,QAAQ,EAAE,CAAA,EAAA,GAAA,KAAK,IAAL,MAAS,IAAT,IAAS,EAAA,KAAA,KAAA,CAAT,GAAS,KAAA,CAAT,GAAS,EAAA,CAAE,QAHjB;AAIJ,QAAA,IAAI,EAAE,CAAA,EAAA,GAAA,KAAK,IAAL,MAAS,IAAT,IAAS,EAAA,KAAA,KAAA,CAAT,GAAS,KAAA,CAAT,GAAS,EAAA,CAAE,IAAF,CAAO,MAAP;AAJX,OAFD;AAQL,MAAA,IAAI,EAAE,KAAK;AARN,KAAP;AAUD;;AAED,EAAA,QAAQ,GAAA;AACN,WAAO,IAAI,CAAC,SAAL,CAAe,KAAK,MAAL,EAAf,CAAP;AACD;;AA5GiB;;AAApB,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst buffer_1 = require(\"buffer\");\nconst errors_1 = require(\"../errors\");\nclass Account {\n    constructor(pubkey, info) {\n        this.pubkey = new web3_js_1.PublicKey(pubkey);\n        this.info = info;\n    }\n    static from(account) {\n        return new this(account.pubkey, account.info);\n    }\n    static load(connection, pubkey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const info = yield Account.getInfo(connection, pubkey);\n            return new this(pubkey, info);\n        });\n    }\n    static isCompatible(_data) {\n        throw new Error(`method 'isCompatible' is not implemented`);\n    }\n    static getInfo(connection, pubkey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const info = yield connection.getAccountInfo(new web3_js_1.PublicKey(pubkey));\n            if (!info) {\n                throw (0, errors_1.ERROR_ACCOUNT_NOT_FOUND)(pubkey);\n            }\n            return Object.assign(Object.assign({}, info), { data: buffer_1.Buffer.from(info === null || info === void 0 ? void 0 : info.data) });\n        });\n    }\n    static getInfos(connection, pubkeys, commitment = 'recent') {\n        return __awaiter(this, void 0, void 0, function* () {\n            const BATCH_SIZE = 99;\n            const promises = [];\n            for (let i = 0; i < pubkeys.length; i += BATCH_SIZE) {\n                promises.push(Account.getMultipleAccounts(connection, pubkeys.slice(i, Math.min(pubkeys.length, i + BATCH_SIZE)), commitment));\n            }\n            const results = new Map();\n            (yield Promise.all(promises)).forEach((result) => { var _a; return [...((_a = result === null || result === void 0 ? void 0 : result.entries()) !== null && _a !== void 0 ? _a : [])].forEach(([k, v]) => results.set(k, v)); });\n            return results;\n        });\n    }\n    static getMultipleAccounts(connection, pubkeys, commitment) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const args = connection._buildArgs([pubkeys.map((k) => k.toString())], commitment, 'base64');\n            const unsafeRes = yield connection._rpcRequest('getMultipleAccounts', args);\n            if (unsafeRes.error) {\n                throw new Error('failed to get info about accounts ' + unsafeRes.error.message);\n            }\n            if (!unsafeRes.result.value)\n                return;\n            const infos = unsafeRes.result.value\n                .filter(Boolean)\n                .map((info) => (Object.assign(Object.assign({}, info), { data: buffer_1.Buffer.from(info.data[0], 'base64') })));\n            return infos.reduce((acc, info, index) => {\n                acc.set(pubkeys[index], info);\n                return acc;\n            }, new Map());\n        });\n    }\n    assertOwner(pubkey) {\n        var _a;\n        return (_a = this.info) === null || _a === void 0 ? void 0 : _a.owner.equals(new web3_js_1.PublicKey(pubkey));\n    }\n    toJSON() {\n        var _a, _b, _c, _d, _e;\n        return {\n            pubkey: this.pubkey.toString(),\n            info: {\n                executable: !!((_a = this.info) === null || _a === void 0 ? void 0 : _a.executable),\n                owner: ((_b = this.info) === null || _b === void 0 ? void 0 : _b.owner) ? new web3_js_1.PublicKey((_c = this.info) === null || _c === void 0 ? void 0 : _c.owner) : null,\n                lamports: (_d = this.info) === null || _d === void 0 ? void 0 : _d.lamports,\n                data: (_e = this.info) === null || _e === void 0 ? void 0 : _e.data.toJSON(),\n            },\n            data: this.data,\n        };\n    }\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n}\nexports.Account = Account;\n//# sourceMappingURL=Account.js.map"]},"metadata":{},"sourceType":"script"}