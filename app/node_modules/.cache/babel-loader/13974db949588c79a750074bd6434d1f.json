{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AddTokenToInactiveVault = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst spl_token_1 = require(\"@solana/spl-token\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst Vault_1 = require(\"../accounts/Vault\");\n\nconst VaultProgram_1 = require(\"../VaultProgram\");\n\nconst VaultProgram_2 = require(\"../VaultProgram\");\n\nclass AddTokenToInactiveVault extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      feePayer\n    } = options;\n    const {\n      vault,\n      vaultAuthority,\n      tokenAccount,\n      tokenStoreAccount,\n      transferAuthority,\n      safetyDepositBox,\n      amount\n    } = params;\n    const data = Vault_1.AmountArgs.serialize({\n      instruction: VaultProgram_2.VaultInstructions.AddTokenToInactiveVault,\n      amount\n    });\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: safetyDepositBox,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: tokenAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: tokenStoreAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: vault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: vaultAuthority,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: transferAuthority,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: VaultProgram_1.VaultProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.AddTokenToInactiveVault = AddTokenToInactiveVault;","map":{"version":3,"sources":["../../../src/transactions/AddTokenToInactiveVault.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAQA,MAAA,OAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAYA,MAAa,uBAAb,SAA6C,UAAA,CAAA,WAA7C,CAAwD;AACtD,EAAA,WAAA,CAAY,OAAZ,EAA4C,MAA5C,EAAiF;AAC/E,UAAM,OAAN;AACA,UAAM;AAAE,MAAA;AAAF,QAAe,OAArB;AACA,UAAM;AACJ,MAAA,KADI;AAEJ,MAAA,cAFI;AAGJ,MAAA,YAHI;AAIJ,MAAA,iBAJI;AAKJ,MAAA,iBALI;AAMJ,MAAA,gBANI;AAOJ,MAAA;AAPI,QAQF,MARJ;AAUA,UAAM,IAAI,GAAG,OAAA,CAAA,UAAA,CAAW,SAAX,CAAqB;AAChC,MAAA,WAAW,EAAE,cAAA,CAAA,iBAAA,CAAkB,uBADC;AAEhC,MAAA;AAFgC,KAArB,CAAb;AAKA,SAAK,GAAL,CACE,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AACzB,MAAA,IAAI,EAAE,CACJ;AACE,QAAA,MAAM,EAAE,gBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OADI,EAMJ;AACE,QAAA,MAAM,EAAE,YADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OANI,EAWJ;AACE,QAAA,MAAM,EAAE,iBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAXI,EAgBJ;AACE,QAAA,MAAM,EAAE,KADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAhBI,EAqBJ;AACE,QAAA,MAAM,EAAE,cADV;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OArBI,EA0BJ;AACE,QAAA,MAAM,EAAE,QADV;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OA1BI,EA+BJ;AACE,QAAA,MAAM,EAAE,iBADV;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OA/BI,EAoCJ;AACE,QAAA,MAAM,EAAE,WAAA,CAAA,gBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OApCI,EAyCJ;AACE,QAAA,MAAM,EAAE,SAAA,CAAA,kBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAzCI,EA8CJ;AACE,QAAA,MAAM,EAAE,SAAA,CAAA,aAAA,CAAc,SADxB;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OA9CI,CADmB;AAqDzB,MAAA,SAAS,EAAE,cAAA,CAAA,YAAA,CAAa,MArDC;AAsDzB,MAAA;AAtDyB,KAA3B,CADF;AA0DD;;AA7EqD;;AAAxD,OAAA,CAAA,uBAAA,GAAA,uBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddTokenToInactiveVault = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst Vault_1 = require(\"../accounts/Vault\");\nconst VaultProgram_1 = require(\"../VaultProgram\");\nconst VaultProgram_2 = require(\"../VaultProgram\");\nclass AddTokenToInactiveVault extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { feePayer } = options;\n        const { vault, vaultAuthority, tokenAccount, tokenStoreAccount, transferAuthority, safetyDepositBox, amount, } = params;\n        const data = Vault_1.AmountArgs.serialize({\n            instruction: VaultProgram_2.VaultInstructions.AddTokenToInactiveVault,\n            amount,\n        });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: safetyDepositBox,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: tokenAccount,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: tokenStoreAccount,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: vault,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: vaultAuthority,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: feePayer,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: transferAuthority,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SystemProgram.programId,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: VaultProgram_1.VaultProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.AddTokenToInactiveVault = AddTokenToInactiveVault;\n//# sourceMappingURL=AddTokenToInactiveVault.js.map"]},"metadata":{},"sourceType":"script"}