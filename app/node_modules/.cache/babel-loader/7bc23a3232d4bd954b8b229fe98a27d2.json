{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CreateMetadata = exports.CreateMetadataArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst Metadata_1 = require(\"../accounts/Metadata\");\n\nconst MetadataProgram_1 = require(\"../MetadataProgram\");\n\nclass CreateMetadataArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = 0;\n  }\n\n}\n\nexports.CreateMetadataArgs = CreateMetadataArgs;\nCreateMetadataArgs.SCHEMA = new Map([...Metadata_1.MetadataDataData.SCHEMA, ...CreateMetadataArgs.struct([['instruction', 'u8'], ['data', Metadata_1.MetadataDataData], ['isMutable', 'u8']])]);\n\nclass CreateMetadata extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      feePayer\n    } = options;\n    const {\n      metadata,\n      metadataData,\n      updateAuthority,\n      mint,\n      mintAuthority\n    } = params;\n    const data = CreateMetadataArgs.serialize({\n      data: metadataData,\n      isMutable: true\n    });\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: metadata,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: mintAuthority,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: updateAuthority,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: MetadataProgram_1.MetadataProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.CreateMetadata = CreateMetadata;","map":{"version":3,"sources":["../../../src/transactions/CreateMetadata.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAOA,MAAA,UAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,MAAA,iBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,MAAa,kBAAb,SAAwC,UAAA,CAAA,KAAA,CAAM,IAA9C,CAAkG;AAAlG,EAAA,WAAA,GAAA;;AAUE,SAAA,WAAA,GAAc,CAAd;AAGD;;AAbiG;;AAAlG,OAAA,CAAA,kBAAA,GAAA,kBAAA;AACkB,kBAAA,CAAA,MAAA,GAAS,IAAI,GAAJ,CAAQ,CAC/B,GAAG,UAAA,CAAA,gBAAA,CAAiB,MADW,EAE/B,GAAG,kBAAkB,CAAC,MAAnB,CAA0B,CAC3B,CAAC,aAAD,EAAgB,IAAhB,CAD2B,EAE3B,CAAC,MAAD,EAAS,UAAA,CAAA,gBAAT,CAF2B,EAG3B,CAAC,WAAD,EAAc,IAAd,CAH2B,CAA1B,CAF4B,CAAR,CAAT;;AAsBlB,MAAa,cAAb,SAAoC,UAAA,CAAA,WAApC,CAA+C;AAC7C,EAAA,WAAA,CAAY,OAAZ,EAA4C,MAA5C,EAAwE;AACtE,UAAM,OAAN;AACA,UAAM;AAAE,MAAA;AAAF,QAAe,OAArB;AACA,UAAM;AAAE,MAAA,QAAF;AAAY,MAAA,YAAZ;AAA0B,MAAA,eAA1B;AAA2C,MAAA,IAA3C;AAAiD,MAAA;AAAjD,QAAmE,MAAzE;AAEA,UAAM,IAAI,GAAG,kBAAkB,CAAC,SAAnB,CAA6B;AACxC,MAAA,IAAI,EAAE,YADkC;AAExC,MAAA,SAAS,EAAE;AAF6B,KAA7B,CAAb;AAKA,SAAK,GAAL,CACE,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AACzB,MAAA,IAAI,EAAE,CACJ;AACE,QAAA,MAAM,EAAE,QADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OADI,EAMJ;AACE,QAAA,MAAM,EAAE,IADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OANI,EAWJ;AACE,QAAA,MAAM,EAAE,aADV;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAXI,EAgBJ;AACE,QAAA,MAAM,EAAE,QADV;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAhBI,EAqBJ;AACE,QAAA,MAAM,EAAE,eADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OArBI,EA0BJ;AACE,QAAA,MAAM,EAAE,SAAA,CAAA,aAAA,CAAc,SADxB;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OA1BI,EA+BJ;AACE,QAAA,MAAM,EAAE,SAAA,CAAA,kBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OA/BI,CADmB;AAsCzB,MAAA,SAAS,EAAE,iBAAA,CAAA,eAAA,CAAgB,MAtCF;AAuCzB,MAAA;AAvCyB,KAA3B,CADF;AA2CD;;AAtD4C;;AAA/C,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateMetadata = exports.CreateMetadataArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst Metadata_1 = require(\"../accounts/Metadata\");\nconst MetadataProgram_1 = require(\"../MetadataProgram\");\nclass CreateMetadataArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 0;\n    }\n}\nexports.CreateMetadataArgs = CreateMetadataArgs;\nCreateMetadataArgs.SCHEMA = new Map([\n    ...Metadata_1.MetadataDataData.SCHEMA,\n    ...CreateMetadataArgs.struct([\n        ['instruction', 'u8'],\n        ['data', Metadata_1.MetadataDataData],\n        ['isMutable', 'u8'],\n    ]),\n]);\nclass CreateMetadata extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { feePayer } = options;\n        const { metadata, metadataData, updateAuthority, mint, mintAuthority } = params;\n        const data = CreateMetadataArgs.serialize({\n            data: metadataData,\n            isMutable: true,\n        });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: metadata,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: mint,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mintAuthority,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: feePayer,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: updateAuthority,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SystemProgram.programId,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: MetadataProgram_1.MetadataProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.CreateMetadata = CreateMetadata;\n//# sourceMappingURL=CreateMetadata.js.map"]},"metadata":{},"sourceType":"script"}