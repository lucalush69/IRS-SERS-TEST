{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EndAuction = exports.EndAuctionArgs = void 0;\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst mpl_auction_1 = require(\"@metaplex-foundation/mpl-auction\");\n\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\n\nclass EndAuctionArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = 20;\n  }\n\n}\n\nexports.EndAuctionArgs = EndAuctionArgs;\n_a = EndAuctionArgs;\nEndAuctionArgs.SCHEMA = _a.struct([['instruction', 'u8'], ['reveal', {\n  kind: 'option',\n  type: [bn_js_1.default, bn_js_1.default]\n}]]);\n\nclass EndAuction extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      store,\n      auction,\n      auctionExtended,\n      auctionManager,\n      auctionManagerAuthority,\n      reveal = null\n    } = params;\n    const data = EndAuctionArgs.serialize({\n      reveal\n    });\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: auctionManager,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: auction,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: auctionExtended,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: auctionManagerAuthority,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: store,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: mpl_auction_1.AuctionProgram.PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.EndAuction = EndAuction;","map":{"version":3,"sources":["../../../src/transactions/EndAuction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,MAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAOA,MAAA,aAAA,GAAA,OAAA,CAAA,kCAAA,CAAA;;AACA,MAAA,iBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,MAAa,cAAb,SAAoC,UAAA,CAAA,KAAA,CAAM,IAA1C,CAAuE;AAAvE,EAAA,WAAA,GAAA;;AAME,SAAA,WAAA,GAAc,EAAd;AAED;;AARsE;;AAAvE,OAAA,CAAA,cAAA,GAAA,cAAA;;AACkB,cAAA,CAAA,MAAA,GAAS,EAAI,CAAC,MAAL,CAAY,CACnC,CAAC,aAAD,EAAgB,IAAhB,CADmC,EAEnC,CAAC,QAAD,EAAW;AAAE,EAAA,IAAI,EAAE,QAAR;AAAkB,EAAA,IAAI,EAAE,CAAC,OAAA,CAAA,OAAD,EAAK,OAAA,CAAA,OAAL;AAAxB,CAAX,CAFmC,CAAZ,CAAT;;AAiBlB,MAAa,UAAb,SAAgC,UAAA,CAAA,WAAhC,CAA2C;AACzC,EAAA,WAAA,CAAY,OAAZ,EAA4C,MAA5C,EAAqF;AACnF,UAAM,OAAN;AACA,UAAM;AACJ,MAAA,KADI;AAEJ,MAAA,OAFI;AAGJ,MAAA,eAHI;AAIJ,MAAA,cAJI;AAKJ,MAAA,uBALI;AAMJ,MAAA,MAAM,GAAG;AANL,QAOF,MAPJ;AASA,UAAM,IAAI,GAAG,cAAc,CAAC,SAAf,CAAyB;AAAE,MAAA;AAAF,KAAzB,CAAb;AAEA,SAAK,GAAL,CACE,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AACzB,MAAA,IAAI,EAAE,CACJ;AACE,QAAA,MAAM,EAAE,cADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OADI,EAMJ;AACE,QAAA,MAAM,EAAE,OADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OANI,EAWJ;AACE,QAAA,MAAM,EAAE,eADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAXI,EAgBJ;AACE,QAAA,MAAM,EAAE,uBADV;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAhBI,EAqBJ;AACE,QAAA,MAAM,EAAE,KADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OArBI,EA0BJ;AACE,QAAA,MAAM,EAAE,aAAA,CAAA,cAAA,CAAe,MADzB;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OA1BI,EA+BJ;AACE,QAAA,MAAM,EAAE,SAAA,CAAA,mBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OA/BI,CADmB;AAsCzB,MAAA,SAAS,EAAE,iBAAA,CAAA,eAAA,CAAgB,MAtCF;AAuCzB,MAAA;AAvCyB,KAA3B,CADF;AA2CD;;AAzDwC;;AAA3C,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EndAuction = exports.EndAuctionArgs = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst mpl_auction_1 = require(\"@metaplex-foundation/mpl-auction\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass EndAuctionArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 20;\n    }\n}\nexports.EndAuctionArgs = EndAuctionArgs;\n_a = EndAuctionArgs;\nEndAuctionArgs.SCHEMA = _a.struct([\n    ['instruction', 'u8'],\n    ['reveal', { kind: 'option', type: [bn_js_1.default, bn_js_1.default] }],\n]);\nclass EndAuction extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { store, auction, auctionExtended, auctionManager, auctionManagerAuthority, reveal = null, } = params;\n        const data = EndAuctionArgs.serialize({ reveal });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: auctionManager,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auctionExtended,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: auctionManagerAuthority,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: store,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_auction_1.AuctionProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.EndAuction = EndAuction;\n//# sourceMappingURL=EndAuction.js.map"]},"metadata":{},"sourceType":"script"}