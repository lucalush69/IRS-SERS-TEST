{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UpdateMetadata = exports.UpdateMetadataArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst Metadata_1 = require(\"../accounts/Metadata\");\n\nconst MetadataProgram_1 = require(\"../MetadataProgram\");\n\nclass UpdateMetadataArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = 1;\n  }\n\n}\n\nexports.UpdateMetadataArgs = UpdateMetadataArgs;\nUpdateMetadataArgs.SCHEMA = new Map([...Metadata_1.MetadataDataData.SCHEMA, ...UpdateMetadataArgs.struct([['instruction', 'u8'], ['data', {\n  kind: 'option',\n  type: Metadata_1.MetadataDataData\n}], ['updateAuthority', {\n  kind: 'option',\n  type: 'pubkeyAsString'\n}], ['primarySaleHappened', {\n  kind: 'option',\n  type: 'u8'\n}]])]);\n\nclass UpdateMetadata extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      metadata,\n      metadataData,\n      updateAuthority,\n      newUpdateAuthority,\n      primarySaleHappened\n    } = params;\n    const data = UpdateMetadataArgs.serialize({\n      data: metadataData,\n      updateAuthority: newUpdateAuthority && newUpdateAuthority.toString(),\n      primarySaleHappened: primarySaleHappened || null\n    });\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: metadata,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: updateAuthority,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: MetadataProgram_1.MetadataProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.UpdateMetadata = UpdateMetadata;","map":{"version":3,"sources":["../../../src/transactions/UpdateMetadata.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,UAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,MAAA,iBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,MAAa,kBAAb,SAAwC,UAAA,CAAA,KAAA,CAAM,IAA9C,CAIE;AAJF,EAAA,WAAA,GAAA;;AAeE,SAAA,WAAA,GAAc,CAAd;AAKD;;AAhBC;;AAJF,OAAA,CAAA,kBAAA,GAAA,kBAAA;AAKkB,kBAAA,CAAA,MAAA,GAAS,IAAI,GAAJ,CAAQ,CAC/B,GAAG,UAAA,CAAA,gBAAA,CAAiB,MADW,EAE/B,GAAG,kBAAkB,CAAC,MAAnB,CAA0B,CAC3B,CAAC,aAAD,EAAgB,IAAhB,CAD2B,EAE3B,CAAC,MAAD,EAAS;AAAE,EAAA,IAAI,EAAE,QAAR;AAAkB,EAAA,IAAI,EAAE,UAAA,CAAA;AAAxB,CAAT,CAF2B,EAG3B,CAAC,iBAAD,EAAoB;AAAE,EAAA,IAAI,EAAE,QAAR;AAAkB,EAAA,IAAI,EAAE;AAAxB,CAApB,CAH2B,EAI3B,CAAC,qBAAD,EAAwB;AAAE,EAAA,IAAI,EAAE,QAAR;AAAkB,EAAA,IAAI,EAAE;AAAxB,CAAxB,CAJ2B,CAA1B,CAF4B,CAAR,CAAT;;AAyBlB,MAAa,cAAb,SAAoC,UAAA,CAAA,WAApC,CAA+C;AAC7C,EAAA,WAAA,CAAY,OAAZ,EAA4C,MAA5C,EAAwE;AACtE,UAAM,OAAN;AACA,UAAM;AAAE,MAAA,QAAF;AAAY,MAAA,YAAZ;AAA0B,MAAA,eAA1B;AAA2C,MAAA,kBAA3C;AAA+D,MAAA;AAA/D,QACJ,MADF;AAGA,UAAM,IAAI,GAAG,kBAAkB,CAAC,SAAnB,CAA6B;AACxC,MAAA,IAAI,EAAE,YADkC;AAExC,MAAA,eAAe,EAAE,kBAAkB,IAAI,kBAAkB,CAAC,QAAnB,EAFC;AAGxC,MAAA,mBAAmB,EAAE,mBAAmB,IAAI;AAHJ,KAA7B,CAAb;AAMA,SAAK,GAAL,CACE,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AACzB,MAAA,IAAI,EAAE,CACJ;AACE,QAAA,MAAM,EAAE,QADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OADI,EAMJ;AACE,QAAA,MAAM,EAAE,eADV;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OANI,CADmB;AAazB,MAAA,SAAS,EAAE,iBAAA,CAAA,eAAA,CAAgB,MAbF;AAczB,MAAA;AAdyB,KAA3B,CADF;AAkBD;;AA9B4C;;AAA/C,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateMetadata = exports.UpdateMetadataArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst Metadata_1 = require(\"../accounts/Metadata\");\nconst MetadataProgram_1 = require(\"../MetadataProgram\");\nclass UpdateMetadataArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 1;\n    }\n}\nexports.UpdateMetadataArgs = UpdateMetadataArgs;\nUpdateMetadataArgs.SCHEMA = new Map([\n    ...Metadata_1.MetadataDataData.SCHEMA,\n    ...UpdateMetadataArgs.struct([\n        ['instruction', 'u8'],\n        ['data', { kind: 'option', type: Metadata_1.MetadataDataData }],\n        ['updateAuthority', { kind: 'option', type: 'pubkeyAsString' }],\n        ['primarySaleHappened', { kind: 'option', type: 'u8' }],\n    ]),\n]);\nclass UpdateMetadata extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { metadata, metadataData, updateAuthority, newUpdateAuthority, primarySaleHappened } = params;\n        const data = UpdateMetadataArgs.serialize({\n            data: metadataData,\n            updateAuthority: newUpdateAuthority && newUpdateAuthority.toString(),\n            primarySaleHappened: primarySaleHappened || null,\n        });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: metadata,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: updateAuthority,\n                    isSigner: true,\n                    isWritable: false,\n                },\n            ],\n            programId: MetadataProgram_1.MetadataProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.UpdateMetadata = UpdateMetadata;\n//# sourceMappingURL=UpdateMetadata.js.map"]},"metadata":{},"sourceType":"script"}