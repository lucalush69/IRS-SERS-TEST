{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignMetadata = exports.SignMetadataArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst MetadataProgram_1 = require(\"../MetadataProgram\");\n\nclass SignMetadataArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = 7;\n  }\n\n}\n\nexports.SignMetadataArgs = SignMetadataArgs;\nSignMetadataArgs.SCHEMA = SignMetadataArgs.struct([['instruction', 'u8']]);\n\nclass SignMetadata extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      metadata,\n      creator\n    } = params;\n    const data = SignMetadataArgs.serialize();\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: metadata,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: creator,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: MetadataProgram_1.MetadataProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.SignMetadata = SignMetadata;","map":{"version":3,"sources":["../../../src/transactions/SignMetadata.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,iBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,MAAa,gBAAb,SAAsC,UAAA,CAAA,KAAA,CAAM,IAA5C,CAAgD;AAAhD,EAAA,WAAA,GAAA;;AAGE,SAAA,WAAA,GAAc,CAAd;AACD;;AAJ+C;;AAAhD,OAAA,CAAA,gBAAA,GAAA,gBAAA;AACkB,gBAAA,CAAA,MAAA,GAAS,gBAAgB,CAAC,MAAjB,CAAwB,CAAC,CAAC,aAAD,EAAgB,IAAhB,CAAD,CAAxB,CAAT;;AAUlB,MAAa,YAAb,SAAkC,UAAA,CAAA,WAAlC,CAA6C;AAC3C,EAAA,WAAA,CAAY,OAAZ,EAA4C,MAA5C,EAAsE;AACpE,UAAM,OAAN;AACA,UAAM;AAAE,MAAA,QAAF;AAAY,MAAA;AAAZ,QAAwB,MAA9B;AAEA,UAAM,IAAI,GAAG,gBAAgB,CAAC,SAAjB,EAAb;AAEA,SAAK,GAAL,CACE,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AACzB,MAAA,IAAI,EAAE,CACJ;AACE,QAAA,MAAM,EAAE,QADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OADI,EAMJ;AACE,QAAA,MAAM,EAAE,OADV;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OANI,CADmB;AAazB,MAAA,SAAS,EAAE,iBAAA,CAAA,eAAA,CAAgB,MAbF;AAczB,MAAA;AAdyB,KAA3B,CADF;AAkBD;;AAzB0C;;AAA7C,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignMetadata = exports.SignMetadataArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst MetadataProgram_1 = require(\"../MetadataProgram\");\nclass SignMetadataArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 7;\n    }\n}\nexports.SignMetadataArgs = SignMetadataArgs;\nSignMetadataArgs.SCHEMA = SignMetadataArgs.struct([['instruction', 'u8']]);\nclass SignMetadata extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { metadata, creator } = params;\n        const data = SignMetadataArgs.serialize();\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: metadata,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: creator,\n                    isSigner: true,\n                    isWritable: false,\n                },\n            ],\n            programId: MetadataProgram_1.MetadataProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.SignMetadata = SignMetadata;\n//# sourceMappingURL=SignMetadata.js.map"]},"metadata":{},"sourceType":"script"}