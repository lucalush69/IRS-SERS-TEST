{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serialize = exports.deserializeUnchecked = exports.deserialize = exports.struct = exports.Data = exports.extendBorsh = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst borsh_1 = require(\"borsh\");\n\nObject.defineProperty(exports, \"deserializeUnchecked\", {\n  enumerable: true,\n  get: function () {\n    return borsh_1.deserializeUnchecked;\n  }\n});\nObject.defineProperty(exports, \"serialize\", {\n  enumerable: true,\n  get: function () {\n    return borsh_1.serialize;\n  }\n});\nObject.defineProperty(exports, \"deserialize\", {\n  enumerable: true,\n  get: function () {\n    return borsh_1.deserialize;\n  }\n});\n\nconst bs58_1 = __importDefault(require(\"bs58\"));\n\nconst extendBorsh = () => {\n  borsh_1.BinaryReader.prototype.readPubkey = function () {\n    const array = this.readFixedArray(32);\n    return new web3_js_1.PublicKey(array);\n  };\n\n  borsh_1.BinaryWriter.prototype.writePubkey = function (value) {\n    this.writeFixedArray(value.toBuffer());\n  };\n\n  borsh_1.BinaryReader.prototype.readPubkeyAsString = function () {\n    const array = this.readFixedArray(32);\n    return bs58_1.default.encode(array);\n  };\n\n  borsh_1.BinaryWriter.prototype.writePubkeyAsString = function (value) {\n    this.writeFixedArray(bs58_1.default.decode(value));\n  };\n};\n\nexports.extendBorsh = extendBorsh;\n(0, exports.extendBorsh)();\n\nclass Data {\n  constructor() {\n    let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    Object.assign(this, args);\n  }\n\n  static struct(fields) {\n    return (0, exports.struct)(this, fields);\n  }\n\n  static serialize() {\n    let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Buffer.from((0, borsh_1.serialize)(this.SCHEMA, new this(args)));\n  }\n\n  static deserialize(data) {\n    return (0, borsh_1.deserializeUnchecked)(this.SCHEMA, this, data);\n  }\n\n}\n\nexports.Data = Data;\n\nconst struct = (type, fields) => {\n  return new Map([[type, {\n    kind: 'struct',\n    fields\n  }]]);\n};\n\nexports.struct = struct;","map":{"version":3,"sources":["../../../src/utils/borsh.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = exports.deserializeUnchecked = exports.deserialize = exports.struct = exports.Data = exports.extendBorsh = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst borsh_1 = require(\"borsh\");\nObject.defineProperty(exports, \"deserializeUnchecked\", { enumerable: true, get: function () { return borsh_1.deserializeUnchecked; } });\nObject.defineProperty(exports, \"serialize\", { enumerable: true, get: function () { return borsh_1.serialize; } });\nObject.defineProperty(exports, \"deserialize\", { enumerable: true, get: function () { return borsh_1.deserialize; } });\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst extendBorsh = () => {\n    borsh_1.BinaryReader.prototype.readPubkey = function () {\n        const array = this.readFixedArray(32);\n        return new web3_js_1.PublicKey(array);\n    };\n    borsh_1.BinaryWriter.prototype.writePubkey = function (value) {\n        this.writeFixedArray(value.toBuffer());\n    };\n    borsh_1.BinaryReader.prototype.readPubkeyAsString = function () {\n        const array = this.readFixedArray(32);\n        return bs58_1.default.encode(array);\n    };\n    borsh_1.BinaryWriter.prototype.writePubkeyAsString = function (value) {\n        this.writeFixedArray(bs58_1.default.decode(value));\n    };\n};\nexports.extendBorsh = extendBorsh;\n(0, exports.extendBorsh)();\nclass Data {\n    constructor(args = {}) {\n        Object.assign(this, args);\n    }\n    static struct(fields) {\n        return (0, exports.struct)(this, fields);\n    }\n    static serialize(args = {}) {\n        return Buffer.from((0, borsh_1.serialize)(this.SCHEMA, new this(args)));\n    }\n    static deserialize(data) {\n        return (0, borsh_1.deserializeUnchecked)(this.SCHEMA, this, data);\n    }\n}\nexports.Data = Data;\nconst struct = (type, fields) => {\n    return new Map([[type, { kind: 'struct', fields }]]);\n};\nexports.struct = struct;\n//# sourceMappingURL=borsh.js.map"]},"metadata":{},"sourceType":"script"}