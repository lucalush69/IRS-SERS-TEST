{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deserialize = exports.TokenAccount = void 0;\n\nconst errors_1 = require(\"../errors\");\n\nconst Account_1 = require(\"./Account\");\n\nconst spl_token_1 = require(\"@solana/spl-token\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nclass TokenAccount extends Account_1.Account {\n  constructor(pubkey, info) {\n    super(pubkey, info);\n\n    if (!this.assertOwner(spl_token_1.TOKEN_PROGRAM_ID)) {\n      throw (0, errors_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!TokenAccount.isCompatible(this.info.data)) {\n      throw (0, errors_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = (0, exports.deserialize)(this.info.data);\n  }\n\n  static isCompatible(data) {\n    return data.length === spl_token_1.AccountLayout.span;\n  }\n\n  static getTokenAccountsByOwner(connection, owner) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield connection.getTokenAccountsByOwner(new web3_js_1.PublicKey(owner), {\n        programId: spl_token_1.TOKEN_PROGRAM_ID\n      })).value.map(_ref => {\n        let {\n          pubkey,\n          account\n        } = _ref;\n        return new TokenAccount(pubkey, account);\n      });\n    });\n  }\n\n}\n\nexports.TokenAccount = TokenAccount;\n\nconst deserialize = data => {\n  const accountInfo = spl_token_1.AccountLayout.decode(data);\n  accountInfo.mint = new web3_js_1.PublicKey(accountInfo.mint);\n  accountInfo.owner = new web3_js_1.PublicKey(accountInfo.owner);\n  accountInfo.amount = spl_token_1.u64.fromBuffer(accountInfo.amount);\n\n  if (accountInfo.delegateOption === 0) {\n    accountInfo.delegate = null;\n    accountInfo.delegatedAmount = new spl_token_1.u64(0);\n  } else {\n    accountInfo.delegate = new web3_js_1.PublicKey(accountInfo.delegate);\n    accountInfo.delegatedAmount = spl_token_1.u64.fromBuffer(accountInfo.delegatedAmount);\n  }\n\n  accountInfo.isInitialized = accountInfo.state !== 0;\n  accountInfo.isFrozen = accountInfo.state === 2;\n\n  if (accountInfo.isNativeOption === 1) {\n    accountInfo.rentExemptReserve = spl_token_1.u64.fromBuffer(accountInfo.isNative);\n    accountInfo.isNative = true;\n  } else {\n    accountInfo.rentExemptReserve = null;\n    accountInfo.isNative = false;\n  }\n\n  if (accountInfo.closeAuthorityOption === 0) {\n    accountInfo.closeAuthority = null;\n  } else {\n    accountInfo.closeAuthority = new web3_js_1.PublicKey(accountInfo.closeAuthority);\n  }\n\n  return accountInfo;\n};\n\nexports.deserialize = deserialize;","map":{"version":3,"sources":["../../../src/accounts/TokenAccount.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserialize = exports.TokenAccount = void 0;\nconst errors_1 = require(\"../errors\");\nconst Account_1 = require(\"./Account\");\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nclass TokenAccount extends Account_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(spl_token_1.TOKEN_PROGRAM_ID)) {\n            throw (0, errors_1.ERROR_INVALID_OWNER)();\n        }\n        if (!TokenAccount.isCompatible(this.info.data)) {\n            throw (0, errors_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = (0, exports.deserialize)(this.info.data);\n    }\n    static isCompatible(data) {\n        return data.length === spl_token_1.AccountLayout.span;\n    }\n    static getTokenAccountsByOwner(connection, owner) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield connection.getTokenAccountsByOwner(new web3_js_1.PublicKey(owner), {\n                programId: spl_token_1.TOKEN_PROGRAM_ID,\n            })).value.map(({ pubkey, account }) => new TokenAccount(pubkey, account));\n        });\n    }\n}\nexports.TokenAccount = TokenAccount;\nconst deserialize = (data) => {\n    const accountInfo = spl_token_1.AccountLayout.decode(data);\n    accountInfo.mint = new web3_js_1.PublicKey(accountInfo.mint);\n    accountInfo.owner = new web3_js_1.PublicKey(accountInfo.owner);\n    accountInfo.amount = spl_token_1.u64.fromBuffer(accountInfo.amount);\n    if (accountInfo.delegateOption === 0) {\n        accountInfo.delegate = null;\n        accountInfo.delegatedAmount = new spl_token_1.u64(0);\n    }\n    else {\n        accountInfo.delegate = new web3_js_1.PublicKey(accountInfo.delegate);\n        accountInfo.delegatedAmount = spl_token_1.u64.fromBuffer(accountInfo.delegatedAmount);\n    }\n    accountInfo.isInitialized = accountInfo.state !== 0;\n    accountInfo.isFrozen = accountInfo.state === 2;\n    if (accountInfo.isNativeOption === 1) {\n        accountInfo.rentExemptReserve = spl_token_1.u64.fromBuffer(accountInfo.isNative);\n        accountInfo.isNative = true;\n    }\n    else {\n        accountInfo.rentExemptReserve = null;\n        accountInfo.isNative = false;\n    }\n    if (accountInfo.closeAuthorityOption === 0) {\n        accountInfo.closeAuthority = null;\n    }\n    else {\n        accountInfo.closeAuthority = new web3_js_1.PublicKey(accountInfo.closeAuthority);\n    }\n    return accountInfo;\n};\nexports.deserialize = deserialize;\n//# sourceMappingURL=TokenAccount.js.map"]},"metadata":{},"sourceType":"script"}