{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PayoutTicket = exports.PayoutTicketData = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst bs58_1 = __importDefault(require(\"bs58\"));\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\n\nconst buffer_1 = require(\"buffer\");\n\nclass PayoutTicketData extends mpl_core_1.Borsh.Data {\n  constructor(args) {\n    super(args);\n    this.key = MetaplexProgram_1.MetaplexKey.PayoutTicketV1;\n  }\n\n}\n\nexports.PayoutTicketData = PayoutTicketData;\n_a = PayoutTicketData;\nPayoutTicketData.SCHEMA = _a.struct([['key', 'u8'], ['recipient', 'pubkeyAsString'], ['amountPaid', 'u64']]);\n\nclass PayoutTicket extends mpl_core_1.Account {\n  constructor(pubkey, info) {\n    super(pubkey, info);\n\n    if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!PayoutTicket.isCompatible(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = PayoutTicketData.deserialize(this.info.data);\n  }\n\n  static isCompatible(data) {\n    return data[0] === MetaplexProgram_1.MetaplexKey.PayoutTicketV1;\n  }\n\n  static getPayoutTicketsByRecipient(connection, recipient) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield MetaplexProgram_1.MetaplexProgram.getProgramAccounts(connection, {\n        filters: [{\n          memcmp: {\n            offset: 0,\n            bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetaplexProgram_1.MetaplexKey.PayoutTicketV1]))\n          }\n        }, {\n          memcmp: {\n            offset: 1,\n            bytes: new web3_js_1.PublicKey(recipient).toBase58()\n          }\n        }]\n      })).map(account => PayoutTicket.from(account));\n    });\n  }\n\n}\n\nexports.PayoutTicket = PayoutTicket;","map":{"version":3,"sources":["../../../src/accounts/PayoutTicket.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AACA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AAQA,MAAA,iBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAGA,MAAa,gBAAb,SAAsC,UAAA,CAAA,KAAA,CAAM,IAA5C,CAAsD;AAWpD,EAAA,WAAA,CAAY,IAAZ,EAAsB;AACpB,UAAM,IAAN;AACA,SAAK,GAAL,GAAW,iBAAA,CAAA,WAAA,CAAY,cAAvB;AACD;;AAdmD;;AAAtD,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AACkB,gBAAA,CAAA,MAAA,GAAS,EAAI,CAAC,MAAL,CAAY,CACnC,CAAC,KAAD,EAAQ,IAAR,CADmC,EAEnC,CAAC,WAAD,EAAc,gBAAd,CAFmC,EAGnC,CAAC,YAAD,EAAe,KAAf,CAHmC,CAAZ,CAAT;;AAgBlB,MAAa,YAAb,SAAkC,UAAA,CAAA,OAAlC,CAA2D;AACzD,EAAA,WAAA,CAAY,MAAZ,EAAkC,IAAlC,EAA2D;AACzD,UAAM,MAAN,EAAc,IAAd;;AAEA,QAAI,CAAC,KAAK,WAAL,CAAiB,iBAAA,CAAA,eAAA,CAAgB,MAAjC,CAAL,EAA+C;AAC7C,YAAM,CAAA,GAAA,UAAA,CAAA,mBAAA,GAAN;AACD;;AAED,QAAI,CAAC,YAAY,CAAC,YAAb,CAA0B,KAAK,IAAL,CAAU,IAApC,CAAL,EAAgD;AAC9C,YAAM,CAAA,GAAA,UAAA,CAAA,0BAAA,GAAN;AACD;;AAED,SAAK,IAAL,GAAY,gBAAgB,CAAC,WAAjB,CAA6B,KAAK,IAAL,CAAU,IAAvC,CAAZ;AACD;;AAEkB,SAAZ,YAAY,CAAC,IAAD,EAAa;AAC9B,WAAO,IAAI,CAAC,CAAD,CAAJ,KAAY,iBAAA,CAAA,WAAA,CAAY,cAA/B;AACD;;AAEuC,SAA3B,2BAA2B,CAAC,UAAD,EAAyB,SAAzB,EAAgD;;AACtF,aAAO,CACL,MAAM,iBAAA,CAAA,eAAA,CAAgB,kBAAhB,CAAmC,UAAnC,EAA+C;AACnD,QAAA,OAAO,EAAE,CAEP;AACE,UAAA,MAAM,EAAE;AACN,YAAA,MAAM,EAAE,CADF;AAEN,YAAA,KAAK,EAAE,MAAA,CAAA,OAAA,CAAK,MAAL,CAAY,QAAA,CAAA,MAAA,CAAO,IAAP,CAAY,CAAC,iBAAA,CAAA,WAAA,CAAY,cAAb,CAAZ,CAAZ;AAFD;AADV,SAFO,EASP;AACE,UAAA,MAAM,EAAE;AACN,YAAA,MAAM,EAAE,CADF;AAEN,YAAA,KAAK,EAAE,IAAI,SAAA,CAAA,SAAJ,CAAc,SAAd,EAAyB,QAAzB;AAFD;AADV,SATO;AAD0C,OAA/C,CADD,EAmBL,GAnBK,CAmBA,OAAD,IAAa,YAAY,CAAC,IAAb,CAAkB,OAAlB,CAnBZ,CAAP;AAoBD,K;AAAA;;AAxCwD;;AAA3D,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PayoutTicket = exports.PayoutTicketData = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nconst buffer_1 = require(\"buffer\");\nclass PayoutTicketData extends mpl_core_1.Borsh.Data {\n    constructor(args) {\n        super(args);\n        this.key = MetaplexProgram_1.MetaplexKey.PayoutTicketV1;\n    }\n}\nexports.PayoutTicketData = PayoutTicketData;\n_a = PayoutTicketData;\nPayoutTicketData.SCHEMA = _a.struct([\n    ['key', 'u8'],\n    ['recipient', 'pubkeyAsString'],\n    ['amountPaid', 'u64'],\n]);\nclass PayoutTicket extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!PayoutTicket.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = PayoutTicketData.deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.PayoutTicketV1;\n    }\n    static getPayoutTicketsByRecipient(connection, recipient) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield MetaplexProgram_1.MetaplexProgram.getProgramAccounts(connection, {\n                filters: [\n                    {\n                        memcmp: {\n                            offset: 0,\n                            bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetaplexProgram_1.MetaplexKey.PayoutTicketV1])),\n                        },\n                    },\n                    {\n                        memcmp: {\n                            offset: 1,\n                            bytes: new web3_js_1.PublicKey(recipient).toBase58(),\n                        },\n                    },\n                ],\n            })).map((account) => PayoutTicket.from(account));\n        });\n    }\n}\nexports.PayoutTicket = PayoutTicket;\n//# sourceMappingURL=PayoutTicket.js.map"]},"metadata":{},"sourceType":"script"}