{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Store = exports.StoreData = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst bs58_1 = __importDefault(require(\"bs58\"));\n\nconst WhitelistedCreator_1 = require(\"./WhitelistedCreator\");\n\nconst AuctionManager_1 = require(\"./AuctionManager\");\n\nconst buffer_1 = require(\"buffer\");\n\nclass StoreData extends mpl_core_1.Borsh.Data {\n  constructor(args) {\n    super(args);\n    this.key = MetaplexProgram_1.MetaplexKey.StoreV1;\n    this.public = true;\n    this.key = MetaplexProgram_1.MetaplexKey.StoreV1;\n  }\n\n}\n\nexports.StoreData = StoreData;\n_a = StoreData;\nStoreData.SCHEMA = _a.struct([['key', 'u8'], ['public', 'u8'], ['auctionProgram', 'pubkeyAsString'], ['tokenVaultProgram', 'pubkeyAsString'], ['tokenMetadataProgram', 'pubkeyAsString'], ['tokenProgram', 'pubkeyAsString']]);\n\nclass Store extends mpl_core_1.Account {\n  constructor(pubkey, info) {\n    super(pubkey, info);\n\n    if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!Store.isCompatible(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = StoreData.deserialize(this.info.data);\n  }\n\n  static isCompatible(data) {\n    return data[0] === MetaplexProgram_1.MetaplexKey.StoreV1;\n  }\n\n  static getPDA(owner) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return MetaplexProgram_1.MetaplexProgram.findProgramAddress([buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX), MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(), new web3_js_1.PublicKey(owner).toBuffer()]);\n    });\n  }\n\n  getWhitelistedCreators(connection) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield MetaplexProgram_1.MetaplexProgram.getProgramAccounts(connection, {\n        filters: [{\n          memcmp: {\n            offset: 0,\n            bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetaplexProgram_1.MetaplexKey.WhitelistedCreatorV1]))\n          }\n        }]\n      })).map(account => WhitelistedCreator_1.WhitelistedCreator.from(account));\n    });\n  }\n\n  getAuctionManagers(connection) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield MetaplexProgram_1.MetaplexProgram.getProgramAccounts(connection, {\n        filters: [{\n          memcmp: {\n            offset: 0,\n            bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetaplexProgram_1.MetaplexKey.AuctionManagerV2]))\n          }\n        }, {\n          memcmp: {\n            offset: 1,\n            bytes: this.pubkey.toBase58()\n          }\n        }]\n      })).map(account => AuctionManager_1.AuctionManager.from(account));\n    });\n  }\n\n}\n\nexports.Store = Store;","map":{"version":3,"sources":["../../../src/accounts/Store.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Store = exports.StoreData = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst WhitelistedCreator_1 = require(\"./WhitelistedCreator\");\nconst AuctionManager_1 = require(\"./AuctionManager\");\nconst buffer_1 = require(\"buffer\");\nclass StoreData extends mpl_core_1.Borsh.Data {\n    constructor(args) {\n        super(args);\n        this.key = MetaplexProgram_1.MetaplexKey.StoreV1;\n        this.public = true;\n        this.key = MetaplexProgram_1.MetaplexKey.StoreV1;\n    }\n}\nexports.StoreData = StoreData;\n_a = StoreData;\nStoreData.SCHEMA = _a.struct([\n    ['key', 'u8'],\n    ['public', 'u8'],\n    ['auctionProgram', 'pubkeyAsString'],\n    ['tokenVaultProgram', 'pubkeyAsString'],\n    ['tokenMetadataProgram', 'pubkeyAsString'],\n    ['tokenProgram', 'pubkeyAsString'],\n]);\nclass Store extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!Store.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = StoreData.deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.StoreV1;\n    }\n    static getPDA(owner) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return MetaplexProgram_1.MetaplexProgram.findProgramAddress([\n                buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX),\n                MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(),\n                new web3_js_1.PublicKey(owner).toBuffer(),\n            ]);\n        });\n    }\n    getWhitelistedCreators(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield MetaplexProgram_1.MetaplexProgram.getProgramAccounts(connection, {\n                filters: [\n                    {\n                        memcmp: {\n                            offset: 0,\n                            bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetaplexProgram_1.MetaplexKey.WhitelistedCreatorV1])),\n                        },\n                    },\n                ],\n            })).map((account) => WhitelistedCreator_1.WhitelistedCreator.from(account));\n        });\n    }\n    getAuctionManagers(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield MetaplexProgram_1.MetaplexProgram.getProgramAccounts(connection, {\n                filters: [\n                    {\n                        memcmp: {\n                            offset: 0,\n                            bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetaplexProgram_1.MetaplexKey.AuctionManagerV2])),\n                        },\n                    },\n                    {\n                        memcmp: {\n                            offset: 1,\n                            bytes: this.pubkey.toBase58(),\n                        },\n                    },\n                ],\n            })).map((account) => AuctionManager_1.AuctionManager.from(account));\n        });\n    }\n}\nexports.Store = Store;\n//# sourceMappingURL=Store.js.map"]},"metadata":{},"sourceType":"script"}