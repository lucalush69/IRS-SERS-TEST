{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar _a, _b, _c;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Vault = exports.VaultData = exports.VaultState = exports.NumberOfShareArgs = exports.AmountArgs = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst bs58_1 = __importDefault(require(\"bs58\"));\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst SafetyDepositBox_1 = require(\"./SafetyDepositBox\");\n\nconst VaultProgram_1 = require(\"../VaultProgram\");\n\nconst buffer_1 = require(\"buffer\");\n\nclass AmountArgs extends mpl_core_1.Borsh.Data {}\n\nexports.AmountArgs = AmountArgs;\n_a = AmountArgs;\nAmountArgs.SCHEMA = _a.struct([['instruction', 'u8'], ['amount', 'u64']]);\n\nclass NumberOfShareArgs extends mpl_core_1.Borsh.Data {}\n\nexports.NumberOfShareArgs = NumberOfShareArgs;\n_b = NumberOfShareArgs;\nNumberOfShareArgs.SCHEMA = _b.struct([['instruction', 'u8'], ['numberOfShares', 'u64']]);\nvar VaultState;\n\n(function (VaultState) {\n  VaultState[VaultState[\"Inactive\"] = 0] = \"Inactive\";\n  VaultState[VaultState[\"Active\"] = 1] = \"Active\";\n  VaultState[VaultState[\"Combined\"] = 2] = \"Combined\";\n  VaultState[VaultState[\"Deactivated\"] = 3] = \"Deactivated\";\n})(VaultState = exports.VaultState || (exports.VaultState = {}));\n\nclass VaultData extends mpl_core_1.Borsh.Data {\n  constructor(args) {\n    super(args);\n    this.key = VaultProgram_1.VaultKey.VaultV1;\n  }\n\n}\n\nexports.VaultData = VaultData;\n_c = VaultData;\nVaultData.SCHEMA = _c.struct([['key', 'u8'], ['tokenProgram', 'pubkeyAsString'], ['fractionMint', 'pubkeyAsString'], ['authority', 'pubkeyAsString'], ['fractionTreasury', 'pubkeyAsString'], ['redeemTreasury', 'pubkeyAsString'], ['allowFurtherShareCreation', 'u8'], ['pricingLookupAddress', 'pubkeyAsString'], ['tokenTypeCount', 'u8'], ['state', 'u8'], ['lockedPricePerShare', 'u64']]);\n\nclass Vault extends mpl_core_1.Account {\n  constructor(pubkey, info) {\n    super(pubkey, info);\n\n    if (!this.assertOwner(VaultProgram_1.VaultProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!Vault.isCompatible(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = VaultData.deserialize(this.info.data);\n  }\n\n  static getPDA(pubkey) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return VaultProgram_1.VaultProgram.findProgramAddress([buffer_1.Buffer.from(VaultProgram_1.VaultProgram.PREFIX), VaultProgram_1.VaultProgram.PUBKEY.toBuffer(), new web3_js_1.PublicKey(pubkey).toBuffer()]);\n    });\n  }\n\n  static isCompatible(data) {\n    return data[0] === VaultProgram_1.VaultKey.VaultV1;\n  }\n\n  getSafetyDepositBoxes(connection) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield VaultProgram_1.VaultProgram.getProgramAccounts(connection, {\n        filters: [{\n          memcmp: {\n            offset: 0,\n            bytes: bs58_1.default.encode(buffer_1.Buffer.from([VaultProgram_1.VaultKey.SafetyDepositBoxV1]))\n          }\n        }, {\n          memcmp: {\n            offset: 1,\n            bytes: this.pubkey.toBase58()\n          }\n        }]\n      })).map(account => SafetyDepositBox_1.SafetyDepositBox.from(account));\n    });\n  }\n\n}\n\nexports.Vault = Vault;\nVault.MAX_VAULT_SIZE = 1 + 32 + 32 + 32 + 32 + 1 + 32 + 1 + 32 + 1 + 1 + 8;\nVault.MAX_EXTERNAL_ACCOUNT_SIZE = 1 + 8 + 32 + 1;","map":{"version":3,"sources":["../../../src/accounts/Vault.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a, _b, _c;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Vault = exports.VaultData = exports.VaultState = exports.NumberOfShareArgs = exports.AmountArgs = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst SafetyDepositBox_1 = require(\"./SafetyDepositBox\");\nconst VaultProgram_1 = require(\"../VaultProgram\");\nconst buffer_1 = require(\"buffer\");\nclass AmountArgs extends mpl_core_1.Borsh.Data {\n}\nexports.AmountArgs = AmountArgs;\n_a = AmountArgs;\nAmountArgs.SCHEMA = _a.struct([\n    ['instruction', 'u8'],\n    ['amount', 'u64'],\n]);\nclass NumberOfShareArgs extends mpl_core_1.Borsh.Data {\n}\nexports.NumberOfShareArgs = NumberOfShareArgs;\n_b = NumberOfShareArgs;\nNumberOfShareArgs.SCHEMA = _b.struct([\n    ['instruction', 'u8'],\n    ['numberOfShares', 'u64'],\n]);\nvar VaultState;\n(function (VaultState) {\n    VaultState[VaultState[\"Inactive\"] = 0] = \"Inactive\";\n    VaultState[VaultState[\"Active\"] = 1] = \"Active\";\n    VaultState[VaultState[\"Combined\"] = 2] = \"Combined\";\n    VaultState[VaultState[\"Deactivated\"] = 3] = \"Deactivated\";\n})(VaultState = exports.VaultState || (exports.VaultState = {}));\nclass VaultData extends mpl_core_1.Borsh.Data {\n    constructor(args) {\n        super(args);\n        this.key = VaultProgram_1.VaultKey.VaultV1;\n    }\n}\nexports.VaultData = VaultData;\n_c = VaultData;\nVaultData.SCHEMA = _c.struct([\n    ['key', 'u8'],\n    ['tokenProgram', 'pubkeyAsString'],\n    ['fractionMint', 'pubkeyAsString'],\n    ['authority', 'pubkeyAsString'],\n    ['fractionTreasury', 'pubkeyAsString'],\n    ['redeemTreasury', 'pubkeyAsString'],\n    ['allowFurtherShareCreation', 'u8'],\n    ['pricingLookupAddress', 'pubkeyAsString'],\n    ['tokenTypeCount', 'u8'],\n    ['state', 'u8'],\n    ['lockedPricePerShare', 'u64'],\n]);\nclass Vault extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(VaultProgram_1.VaultProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!Vault.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = VaultData.deserialize(this.info.data);\n    }\n    static getPDA(pubkey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return VaultProgram_1.VaultProgram.findProgramAddress([\n                buffer_1.Buffer.from(VaultProgram_1.VaultProgram.PREFIX),\n                VaultProgram_1.VaultProgram.PUBKEY.toBuffer(),\n                new web3_js_1.PublicKey(pubkey).toBuffer(),\n            ]);\n        });\n    }\n    static isCompatible(data) {\n        return data[0] === VaultProgram_1.VaultKey.VaultV1;\n    }\n    getSafetyDepositBoxes(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield VaultProgram_1.VaultProgram.getProgramAccounts(connection, {\n                filters: [\n                    {\n                        memcmp: {\n                            offset: 0,\n                            bytes: bs58_1.default.encode(buffer_1.Buffer.from([VaultProgram_1.VaultKey.SafetyDepositBoxV1])),\n                        },\n                    },\n                    {\n                        memcmp: {\n                            offset: 1,\n                            bytes: this.pubkey.toBase58(),\n                        },\n                    },\n                ],\n            })).map((account) => SafetyDepositBox_1.SafetyDepositBox.from(account));\n        });\n    }\n}\nexports.Vault = Vault;\nVault.MAX_VAULT_SIZE = 1 + 32 + 32 + 32 + 32 + 1 + 32 + 1 + 32 + 1 + 1 + 8;\nVault.MAX_EXTERNAL_ACCOUNT_SIZE = 1 + 8 + 32 + 1;\n//# sourceMappingURL=Vault.js.map"]},"metadata":{},"sourceType":"script"}