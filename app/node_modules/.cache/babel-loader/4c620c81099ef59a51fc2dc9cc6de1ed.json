{"ast":null,"code":"\"use strict\";\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UpdateExternalPriceAccount = exports.UpdateExternalPriceAccountArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst VaultProgram_1 = require(\"../VaultProgram\");\n\nconst ExternalPriceAccount_1 = require(\"../accounts/ExternalPriceAccount\");\n\nconst VaultProgram_2 = require(\"../VaultProgram\");\n\nclass UpdateExternalPriceAccountArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = VaultProgram_1.VaultInstructions.UpdateExternalPriceAccount;\n  }\n\n}\n\nexports.UpdateExternalPriceAccountArgs = UpdateExternalPriceAccountArgs;\n_a = UpdateExternalPriceAccountArgs;\nUpdateExternalPriceAccountArgs.SCHEMA = new Map([...ExternalPriceAccount_1.ExternalPriceAccountData.SCHEMA, ..._a.struct([['instruction', 'u8'], ['externalPriceAccount', ExternalPriceAccount_1.ExternalPriceAccountData]])]);\n\nclass UpdateExternalPriceAccount extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      externalPriceAccount,\n      externalPriceAccountData\n    } = params;\n    const data = UpdateExternalPriceAccountArgs.serialize({\n      externalPriceAccount: externalPriceAccountData\n    });\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: externalPriceAccount,\n        isSigner: false,\n        isWritable: true\n      }],\n      programId: VaultProgram_2.VaultProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.UpdateExternalPriceAccount = UpdateExternalPriceAccount;","map":{"version":3,"sources":["../../../src/transactions/UpdateExternalPriceAccount.ts"],"names":[],"mappings":";;;;;;;;;AAAA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,sBAAA,GAAA,OAAA,CAAA,kCAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,MAAa,8BAAb,SAAoD,UAAA,CAAA,KAAA,CAAM,IAA1D,CAEE;AAFF,EAAA,WAAA,GAAA;;AAWE,SAAA,WAAA,GAAc,cAAA,CAAA,iBAAA,CAAkB,0BAAhC;AAED;;AAXC;;AAFF,OAAA,CAAA,8BAAA,GAAA,8BAAA;;AAGkB,8BAAA,CAAA,MAAA,GAAS,IAAI,GAAJ,CAAQ,CAC/B,GAAG,sBAAA,CAAA,wBAAA,CAAyB,MADG,EAE/B,GAAG,EAAI,CAAC,MAAL,CAAY,CACb,CAAC,aAAD,EAAgB,IAAhB,CADa,EAEb,CAAC,sBAAD,EAAyB,sBAAA,CAAA,wBAAzB,CAFa,CAAZ,CAF4B,CAAR,CAAT;;AAiBlB,MAAa,0BAAb,SAAgD,UAAA,CAAA,WAAhD,CAA2D;AACzD,EAAA,WAAA,CAAY,OAAZ,EAA4C,MAA5C,EAAoF;AAClF,UAAM,OAAN;AACA,UAAM;AAAE,MAAA,oBAAF;AAAwB,MAAA;AAAxB,QAAqD,MAA3D;AAEA,UAAM,IAAI,GAAG,8BAA8B,CAAC,SAA/B,CAAyC;AACpD,MAAA,oBAAoB,EAAE;AAD8B,KAAzC,CAAb;AAIA,SAAK,GAAL,CACE,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AACzB,MAAA,IAAI,EAAE,CACJ;AACE,QAAA,MAAM,EAAE,oBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OADI,CADmB;AAQzB,MAAA,SAAS,EAAE,cAAA,CAAA,YAAA,CAAa,MARC;AASzB,MAAA;AATyB,KAA3B,CADF;AAaD;;AAtBwD;;AAA3D,OAAA,CAAA,0BAAA,GAAA,0BAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateExternalPriceAccount = exports.UpdateExternalPriceAccountArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst VaultProgram_1 = require(\"../VaultProgram\");\nconst ExternalPriceAccount_1 = require(\"../accounts/ExternalPriceAccount\");\nconst VaultProgram_2 = require(\"../VaultProgram\");\nclass UpdateExternalPriceAccountArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = VaultProgram_1.VaultInstructions.UpdateExternalPriceAccount;\n    }\n}\nexports.UpdateExternalPriceAccountArgs = UpdateExternalPriceAccountArgs;\n_a = UpdateExternalPriceAccountArgs;\nUpdateExternalPriceAccountArgs.SCHEMA = new Map([\n    ...ExternalPriceAccount_1.ExternalPriceAccountData.SCHEMA,\n    ..._a.struct([\n        ['instruction', 'u8'],\n        ['externalPriceAccount', ExternalPriceAccount_1.ExternalPriceAccountData],\n    ]),\n]);\nclass UpdateExternalPriceAccount extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { externalPriceAccount, externalPriceAccountData } = params;\n        const data = UpdateExternalPriceAccountArgs.serialize({\n            externalPriceAccount: externalPriceAccountData,\n        });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: externalPriceAccount,\n                    isSigner: false,\n                    isWritable: true,\n                },\n            ],\n            programId: VaultProgram_2.VaultProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.UpdateExternalPriceAccount = UpdateExternalPriceAccount;\n//# sourceMappingURL=UpdateExternalPriceAccount.js.map"]},"metadata":{},"sourceType":"script"}