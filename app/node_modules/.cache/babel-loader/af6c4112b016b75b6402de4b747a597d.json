{"ast":null,"code":"\"use strict\";\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SetVaultAuthority = exports.SetVaultAuthorityArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst VaultProgram_1 = require(\"../VaultProgram\");\n\nconst VaultProgram_2 = require(\"../VaultProgram\");\n\nclass SetVaultAuthorityArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = VaultProgram_1.VaultInstructions.SetVaultAuthority;\n  }\n\n}\n\nexports.SetVaultAuthorityArgs = SetVaultAuthorityArgs;\n_a = SetVaultAuthorityArgs;\nSetVaultAuthorityArgs.SCHEMA = _a.struct([['instruction', 'u8']]);\n\nclass SetVaultAuthority extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      vault,\n      currentAuthority,\n      newAuthority\n    } = params;\n    const data = SetVaultAuthorityArgs.serialize();\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: vault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: currentAuthority,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: newAuthority,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: VaultProgram_2.VaultProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.SetVaultAuthority = SetVaultAuthority;","map":{"version":3,"sources":["../../../src/transactions/SetVaultAuthority.ts"],"names":[],"mappings":";;;;;;;;;AAAA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,MAAa,qBAAb,SAA2C,UAAA,CAAA,KAAA,CAAM,IAAjD,CAAqD;AAArD,EAAA,WAAA,GAAA;;AAGE,SAAA,WAAA,GAAc,cAAA,CAAA,iBAAA,CAAkB,iBAAhC;AACD;;AAJoD;;AAArD,OAAA,CAAA,qBAAA,GAAA,qBAAA;;AACkB,qBAAA,CAAA,MAAA,GAAS,EAAI,CAAC,MAAL,CAAY,CAAC,CAAC,aAAD,EAAgB,IAAhB,CAAD,CAAZ,CAAT;;AAWlB,MAAa,iBAAb,SAAuC,UAAA,CAAA,WAAvC,CAAkD;AAChD,EAAA,WAAA,CAAY,OAAZ,EAA4C,MAA5C,EAA2E;AACzE,UAAM,OAAN;AACA,UAAM;AAAE,MAAA,KAAF;AAAS,MAAA,gBAAT;AAA2B,MAAA;AAA3B,QAA4C,MAAlD;AAEA,UAAM,IAAI,GAAG,qBAAqB,CAAC,SAAtB,EAAb;AAEA,SAAK,GAAL,CACE,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AACzB,MAAA,IAAI,EAAE,CACJ;AACE,QAAA,MAAM,EAAE,KADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OADI,EAMJ;AACE,QAAA,MAAM,EAAE,gBADV;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OANI,EAWJ;AACE,QAAA,MAAM,EAAE,YADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAXI,CADmB;AAkBzB,MAAA,SAAS,EAAE,cAAA,CAAA,YAAA,CAAa,MAlBC;AAmBzB,MAAA;AAnByB,KAA3B,CADF;AAuBD;;AA9B+C;;AAAlD,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetVaultAuthority = exports.SetVaultAuthorityArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst VaultProgram_1 = require(\"../VaultProgram\");\nconst VaultProgram_2 = require(\"../VaultProgram\");\nclass SetVaultAuthorityArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = VaultProgram_1.VaultInstructions.SetVaultAuthority;\n    }\n}\nexports.SetVaultAuthorityArgs = SetVaultAuthorityArgs;\n_a = SetVaultAuthorityArgs;\nSetVaultAuthorityArgs.SCHEMA = _a.struct([['instruction', 'u8']]);\nclass SetVaultAuthority extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { vault, currentAuthority, newAuthority } = params;\n        const data = SetVaultAuthorityArgs.serialize();\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: vault,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: currentAuthority,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: newAuthority,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: VaultProgram_2.VaultProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.SetVaultAuthority = SetVaultAuthority;\n//# sourceMappingURL=SetVaultAuthority.js.map"]},"metadata":{},"sourceType":"script"}