{"ast":null,"code":"\"use strict\";\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExternalPriceAccount = exports.ExternalPriceAccountData = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst VaultProgram_1 = require(\"../VaultProgram\");\n\nclass ExternalPriceAccountData extends mpl_core_1.Borsh.Data {\n  constructor(args) {\n    super(args);\n    this.key = VaultProgram_1.VaultKey.ExternalPriceAccountV1;\n  }\n\n}\n\nexports.ExternalPriceAccountData = ExternalPriceAccountData;\n_a = ExternalPriceAccountData;\nExternalPriceAccountData.SCHEMA = _a.struct([['key', 'u8'], ['pricePerShare', 'u64'], ['priceMint', 'pubkeyAsString'], ['allowedToCombine', 'u8']]);\n\nclass ExternalPriceAccount extends mpl_core_1.Account {\n  constructor(key, info) {\n    super(key, info);\n\n    if (!this.assertOwner(VaultProgram_1.VaultProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!ExternalPriceAccount.isCompatible(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = ExternalPriceAccountData.deserialize(this.info.data);\n  }\n\n  static isCompatible(data) {\n    return data[0] === VaultProgram_1.VaultKey.ExternalPriceAccountV1;\n  }\n\n}\n\nexports.ExternalPriceAccount = ExternalPriceAccount;","map":{"version":3,"sources":["../../../src/accounts/ExternalPriceAccount.ts"],"names":[],"mappings":";;;;;;;;;AAGA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AAQA,MAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAOA,MAAa,wBAAb,SAA8C,UAAA,CAAA,KAAA,CAAM,IAApD,CAA8D;AAgB5D,EAAA,WAAA,CAAY,IAAZ,EAAsB;AACpB,UAAM,IAAN;AACA,SAAK,GAAL,GAAW,cAAA,CAAA,QAAA,CAAS,sBAApB;AACD;;AAnB2D;;AAA9D,OAAA,CAAA,wBAAA,GAAA,wBAAA;;AACkB,wBAAA,CAAA,MAAA,GAAS,EAAI,CAAC,MAAL,CAAY,CACnC,CAAC,KAAD,EAAQ,IAAR,CADmC,EAEnC,CAAC,eAAD,EAAkB,KAAlB,CAFmC,EAGnC,CAAC,WAAD,EAAc,gBAAd,CAHmC,EAInC,CAAC,kBAAD,EAAqB,IAArB,CAJmC,CAAZ,CAAT;;AAqBlB,MAAa,oBAAb,SAA0C,UAAA,CAAA,OAA1C,CAA2E;AACzE,EAAA,WAAA,CAAY,GAAZ,EAA+B,IAA/B,EAAwD;AACtD,UAAM,GAAN,EAAW,IAAX;;AAEA,QAAI,CAAC,KAAK,WAAL,CAAiB,cAAA,CAAA,YAAA,CAAa,MAA9B,CAAL,EAA4C;AAC1C,YAAM,CAAA,GAAA,UAAA,CAAA,mBAAA,GAAN;AACD;;AAED,QAAI,CAAC,oBAAoB,CAAC,YAArB,CAAkC,KAAK,IAAL,CAAU,IAA5C,CAAL,EAAwD;AACtD,YAAM,CAAA,GAAA,UAAA,CAAA,0BAAA,GAAN;AACD;;AAED,SAAK,IAAL,GAAY,wBAAwB,CAAC,WAAzB,CAAqC,KAAK,IAAL,CAAU,IAA/C,CAAZ;AACD;;AAEkB,SAAZ,YAAY,CAAC,IAAD,EAAa;AAC9B,WAAO,IAAI,CAAC,CAAD,CAAJ,KAAY,cAAA,CAAA,QAAA,CAAS,sBAA5B;AACD;;AAjBwE;;AAA3E,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExternalPriceAccount = exports.ExternalPriceAccountData = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst VaultProgram_1 = require(\"../VaultProgram\");\nclass ExternalPriceAccountData extends mpl_core_1.Borsh.Data {\n    constructor(args) {\n        super(args);\n        this.key = VaultProgram_1.VaultKey.ExternalPriceAccountV1;\n    }\n}\nexports.ExternalPriceAccountData = ExternalPriceAccountData;\n_a = ExternalPriceAccountData;\nExternalPriceAccountData.SCHEMA = _a.struct([\n    ['key', 'u8'],\n    ['pricePerShare', 'u64'],\n    ['priceMint', 'pubkeyAsString'],\n    ['allowedToCombine', 'u8'],\n]);\nclass ExternalPriceAccount extends mpl_core_1.Account {\n    constructor(key, info) {\n        super(key, info);\n        if (!this.assertOwner(VaultProgram_1.VaultProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!ExternalPriceAccount.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = ExternalPriceAccountData.deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data[0] === VaultProgram_1.VaultKey.ExternalPriceAccountV1;\n    }\n}\nexports.ExternalPriceAccount = ExternalPriceAccount;\n//# sourceMappingURL=ExternalPriceAccount.js.map"]},"metadata":{},"sourceType":"script"}