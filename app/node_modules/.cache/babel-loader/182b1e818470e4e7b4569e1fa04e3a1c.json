{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WhitelistedCreator = exports.WhitelistedCreatorData = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\n\nconst buffer_1 = require(\"buffer\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nclass WhitelistedCreatorData extends mpl_core_1.Borsh.Data {\n  constructor(args) {\n    super(args);\n    this.key = MetaplexProgram_1.MetaplexKey.WhitelistedCreatorV1;\n    this.activated = true;\n    this.key = MetaplexProgram_1.MetaplexKey.WhitelistedCreatorV1;\n  }\n\n}\n\nexports.WhitelistedCreatorData = WhitelistedCreatorData;\n_a = WhitelistedCreatorData;\nWhitelistedCreatorData.SCHEMA = _a.struct([['key', 'u8'], ['address', 'pubkeyAsString'], ['activated', 'u8']]);\n\nclass WhitelistedCreator extends mpl_core_1.Account {\n  constructor(pubkey, info) {\n    super(pubkey, info);\n\n    if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!WhitelistedCreator.isCompatible(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = WhitelistedCreatorData.deserialize(this.info.data);\n  }\n\n  static isCompatible(data) {\n    return data[0] === MetaplexProgram_1.MetaplexKey.WhitelistedCreatorV1;\n  }\n\n  static getPDA(store, creator) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return MetaplexProgram_1.MetaplexProgram.findProgramAddress([buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX), MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(), new web3_js_1.PublicKey(store).toBuffer(), new web3_js_1.PublicKey(creator).toBuffer()]);\n    });\n  }\n\n}\n\nexports.WhitelistedCreator = WhitelistedCreator;","map":{"version":3,"sources":["../../../src/accounts/WhitelistedCreator.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AAQA,MAAA,iBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAGA,MAAa,sBAAb,SAA4C,UAAA,CAAA,KAAA,CAAM,IAAlD,CAA4D;AAiB1D,EAAA,WAAA,CAAY,IAAZ,EAAsB;AACpB,UAAM,IAAN;AAXF,SAAA,GAAA,GAAmB,iBAAA,CAAA,WAAA,CAAY,oBAA/B;AAEA,SAAA,SAAA,GAAY,IAAZ;AAUE,SAAK,GAAL,GAAW,iBAAA,CAAA,WAAA,CAAY,oBAAvB;AACD;;AApByD;;AAA5D,OAAA,CAAA,sBAAA,GAAA,sBAAA;;AACkB,sBAAA,CAAA,MAAA,GAAS,EAAI,CAAC,MAAL,CAAY,CACnC,CAAC,KAAD,EAAQ,IAAR,CADmC,EAEnC,CAAC,SAAD,EAAY,gBAAZ,CAFmC,EAGnC,CAAC,WAAD,EAAc,IAAd,CAHmC,CAAZ,CAAT;;AAsBlB,MAAa,kBAAb,SAAwC,UAAA,CAAA,OAAxC,CAAuE;AACrE,EAAA,WAAA,CAAY,MAAZ,EAAkC,IAAlC,EAA2D;AACzD,UAAM,MAAN,EAAc,IAAd;;AAEA,QAAI,CAAC,KAAK,WAAL,CAAiB,iBAAA,CAAA,eAAA,CAAgB,MAAjC,CAAL,EAA+C;AAC7C,YAAM,CAAA,GAAA,UAAA,CAAA,mBAAA,GAAN;AACD;;AAED,QAAI,CAAC,kBAAkB,CAAC,YAAnB,CAAgC,KAAK,IAAL,CAAU,IAA1C,CAAL,EAAsD;AACpD,YAAM,CAAA,GAAA,UAAA,CAAA,0BAAA,GAAN;AACD;;AAED,SAAK,IAAL,GAAY,sBAAsB,CAAC,WAAvB,CAAmC,KAAK,IAAL,CAAU,IAA7C,CAAZ;AACD;;AAEkB,SAAZ,YAAY,CAAC,IAAD,EAAa;AAC9B,WAAO,IAAI,CAAC,CAAD,CAAJ,KAAY,iBAAA,CAAA,WAAA,CAAY,oBAA/B;AACD;;AAEkB,SAAN,MAAM,CAAC,KAAD,EAAsB,OAAtB,EAA2C;;AAC5D,aAAO,iBAAA,CAAA,eAAA,CAAgB,kBAAhB,CAAmC,CACxC,QAAA,CAAA,MAAA,CAAO,IAAP,CAAY,iBAAA,CAAA,eAAA,CAAgB,MAA5B,CADwC,EAExC,iBAAA,CAAA,eAAA,CAAgB,MAAhB,CAAuB,QAAvB,EAFwC,EAGxC,IAAI,SAAA,CAAA,SAAJ,CAAc,KAAd,EAAqB,QAArB,EAHwC,EAIxC,IAAI,SAAA,CAAA,SAAJ,CAAc,OAAd,EAAuB,QAAvB,EAJwC,CAAnC,CAAP;AAMD,K;AAAA;;AA1BoE;;AAAvE,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WhitelistedCreator = exports.WhitelistedCreatorData = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nconst buffer_1 = require(\"buffer\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nclass WhitelistedCreatorData extends mpl_core_1.Borsh.Data {\n    constructor(args) {\n        super(args);\n        this.key = MetaplexProgram_1.MetaplexKey.WhitelistedCreatorV1;\n        this.activated = true;\n        this.key = MetaplexProgram_1.MetaplexKey.WhitelistedCreatorV1;\n    }\n}\nexports.WhitelistedCreatorData = WhitelistedCreatorData;\n_a = WhitelistedCreatorData;\nWhitelistedCreatorData.SCHEMA = _a.struct([\n    ['key', 'u8'],\n    ['address', 'pubkeyAsString'],\n    ['activated', 'u8'],\n]);\nclass WhitelistedCreator extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!WhitelistedCreator.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = WhitelistedCreatorData.deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.WhitelistedCreatorV1;\n    }\n    static getPDA(store, creator) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return MetaplexProgram_1.MetaplexProgram.findProgramAddress([\n                buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX),\n                MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(),\n                new web3_js_1.PublicKey(store).toBuffer(),\n                new web3_js_1.PublicKey(creator).toBuffer(),\n            ]);\n        });\n    }\n}\nexports.WhitelistedCreator = WhitelistedCreator;\n//# sourceMappingURL=WhitelistedCreator.js.map"]},"metadata":{},"sourceType":"script"}