{"ast":null,"code":"\"use strict\";\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CombineVault = exports.CombineVaultArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst spl_token_1 = require(\"@solana/spl-token\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst VaultProgram_1 = require(\"../VaultProgram\");\n\nconst VaultProgram_2 = require(\"../VaultProgram\");\n\nclass CombineVaultArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = VaultProgram_1.VaultInstructions.CombineVault;\n  }\n\n}\n\nexports.CombineVaultArgs = CombineVaultArgs;\n_a = CombineVaultArgs;\nCombineVaultArgs.SCHEMA = _a.struct([['instruction', 'u8']]);\n\nclass CombineVault extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      vault,\n      vaultAuthority,\n      fractionMint,\n      fractionTreasury,\n      outstandingShareTokenAccount,\n      payingTokenAccount,\n      redeemTreasury,\n      newVaultAuthority,\n      transferAuthority,\n      externalPriceAccount,\n      burnAuthority\n    } = params;\n    const data = CombineVaultArgs.serialize();\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: vault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: outstandingShareTokenAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: payingTokenAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: fractionMint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: fractionTreasury,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: redeemTreasury,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: newVaultAuthority || vaultAuthority,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: vaultAuthority,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: transferAuthority,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: burnAuthority,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: externalPriceAccount,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: VaultProgram_2.VaultProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.CombineVault = CombineVault;","map":{"version":3,"sources":["../../../src/transactions/CombineVault.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CombineVault = exports.CombineVaultArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst VaultProgram_1 = require(\"../VaultProgram\");\nconst VaultProgram_2 = require(\"../VaultProgram\");\nclass CombineVaultArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = VaultProgram_1.VaultInstructions.CombineVault;\n    }\n}\nexports.CombineVaultArgs = CombineVaultArgs;\n_a = CombineVaultArgs;\nCombineVaultArgs.SCHEMA = _a.struct([['instruction', 'u8']]);\nclass CombineVault extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { vault, vaultAuthority, fractionMint, fractionTreasury, outstandingShareTokenAccount, payingTokenAccount, redeemTreasury, newVaultAuthority, transferAuthority, externalPriceAccount, burnAuthority, } = params;\n        const data = CombineVaultArgs.serialize();\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: vault,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: outstandingShareTokenAccount,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: payingTokenAccount,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: fractionMint,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: fractionTreasury,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: redeemTreasury,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: newVaultAuthority || vaultAuthority,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: vaultAuthority,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: transferAuthority,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: burnAuthority,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: externalPriceAccount,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: VaultProgram_2.VaultProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.CombineVault = CombineVault;\n//# sourceMappingURL=CombineVault.js.map"]},"metadata":{},"sourceType":"script"}