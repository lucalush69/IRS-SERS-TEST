{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StoreConfig = exports.StoreConfigData = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst buffer_1 = require(\"buffer\");\n\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\n\nclass StoreConfigData extends mpl_core_1.Borsh.Data {\n  constructor(args) {\n    super(args);\n    this.key = MetaplexProgram_1.MetaplexKey.StoreConfigV1;\n    this.key = MetaplexProgram_1.MetaplexKey.StoreConfigV1;\n  }\n\n}\n\nexports.StoreConfigData = StoreConfigData;\n_a = StoreConfigData;\nStoreConfigData.SCHEMA = _a.struct([['key', 'u8'], ['settingsUri', {\n  kind: 'option',\n  type: 'string'\n}]]);\n\nclass StoreConfig extends mpl_core_1.Account {\n  constructor(pubkey, info) {\n    super(pubkey, info);\n\n    if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!StoreConfig.isCompatible(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = StoreConfigData.deserialize(this.info.data);\n  }\n\n  static isCompatible(data) {\n    return data[0] === MetaplexProgram_1.MetaplexKey.StoreConfigV1;\n  }\n\n  static getPDA(store) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return MetaplexProgram_1.MetaplexProgram.findProgramAddress([buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX), MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(), buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.CONFIG), new web3_js_1.PublicKey(store).toBuffer()]);\n    });\n  }\n\n}\n\nexports.StoreConfig = StoreConfig;","map":{"version":3,"sources":["../../../src/accounts/StoreConfig.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AAOA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,MAAA,iBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAKA,MAAa,eAAb,SAAqC,UAAA,CAAA,KAAA,CAAM,IAA3C,CAAqD;AASnD,EAAA,WAAA,CAAY,IAAZ,EAAsB;AACpB,UAAM,IAAN;AAJF,SAAA,GAAA,GAAmB,iBAAA,CAAA,WAAA,CAAY,aAA/B;AAKE,SAAK,GAAL,GAAW,iBAAA,CAAA,WAAA,CAAY,aAAvB;AACD;;AAZkD;;AAArD,OAAA,CAAA,eAAA,GAAA,eAAA;;AACkB,eAAA,CAAA,MAAA,GAAS,EAAI,CAAC,MAAL,CAAY,CACnC,CAAC,KAAD,EAAQ,IAAR,CADmC,EAEnC,CAAC,aAAD,EAAgB;AAAE,EAAA,IAAI,EAAE,QAAR;AAAkB,EAAA,IAAI,EAAE;AAAxB,CAAhB,CAFmC,CAAZ,CAAT;;AAclB,MAAa,WAAb,SAAiC,UAAA,CAAA,OAAjC,CAAyD;AACvD,EAAA,WAAA,CAAY,MAAZ,EAAkC,IAAlC,EAA2D;AACzD,UAAM,MAAN,EAAc,IAAd;;AAEA,QAAI,CAAC,KAAK,WAAL,CAAiB,iBAAA,CAAA,eAAA,CAAgB,MAAjC,CAAL,EAA+C;AAC7C,YAAM,CAAA,GAAA,UAAA,CAAA,mBAAA,GAAN;AACD;;AAED,QAAI,CAAC,WAAW,CAAC,YAAZ,CAAyB,KAAK,IAAL,CAAU,IAAnC,CAAL,EAA+C;AAC7C,YAAM,CAAA,GAAA,UAAA,CAAA,0BAAA,GAAN;AACD;;AAED,SAAK,IAAL,GAAY,eAAe,CAAC,WAAhB,CAA4B,KAAK,IAAL,CAAU,IAAtC,CAAZ;AACD;;AAEkB,SAAZ,YAAY,CAAC,IAAD,EAAa;AAC9B,WAAO,IAAI,CAAC,CAAD,CAAJ,KAAY,iBAAA,CAAA,WAAA,CAAY,aAA/B;AACD;;AAEkB,SAAN,MAAM,CAAC,KAAD,EAAoB;;AACrC,aAAO,iBAAA,CAAA,eAAA,CAAgB,kBAAhB,CAAmC,CACxC,QAAA,CAAA,MAAA,CAAO,IAAP,CAAY,iBAAA,CAAA,eAAA,CAAgB,MAA5B,CADwC,EAExC,iBAAA,CAAA,eAAA,CAAgB,MAAhB,CAAuB,QAAvB,EAFwC,EAGxC,QAAA,CAAA,MAAA,CAAO,IAAP,CAAY,iBAAA,CAAA,eAAA,CAAgB,MAA5B,CAHwC,EAIxC,IAAI,SAAA,CAAA,SAAJ,CAAc,KAAd,EAAqB,QAArB,EAJwC,CAAnC,CAAP;AAMD,K;AAAA;;AA1BsD;;AAAzD,OAAA,CAAA,WAAA,GAAA,WAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StoreConfig = exports.StoreConfigData = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst buffer_1 = require(\"buffer\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass StoreConfigData extends mpl_core_1.Borsh.Data {\n    constructor(args) {\n        super(args);\n        this.key = MetaplexProgram_1.MetaplexKey.StoreConfigV1;\n        this.key = MetaplexProgram_1.MetaplexKey.StoreConfigV1;\n    }\n}\nexports.StoreConfigData = StoreConfigData;\n_a = StoreConfigData;\nStoreConfigData.SCHEMA = _a.struct([\n    ['key', 'u8'],\n    ['settingsUri', { kind: 'option', type: 'string' }],\n]);\nclass StoreConfig extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!StoreConfig.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = StoreConfigData.deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.StoreConfigV1;\n    }\n    static getPDA(store) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return MetaplexProgram_1.MetaplexProgram.findProgramAddress([\n                buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX),\n                MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(),\n                buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.CONFIG),\n                new web3_js_1.PublicKey(store).toBuffer(),\n            ]);\n        });\n    }\n}\nexports.StoreConfig = StoreConfig;\n//# sourceMappingURL=StoreConfig.js.map"]},"metadata":{},"sourceType":"script"}