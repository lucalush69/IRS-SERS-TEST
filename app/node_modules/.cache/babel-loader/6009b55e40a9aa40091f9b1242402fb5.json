{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MintFractionalShares = void 0;\n\nconst spl_token_1 = require(\"@solana/spl-token\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst VaultProgram_1 = require(\"../VaultProgram\");\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst Vault_1 = require(\"../accounts/Vault\");\n\nconst VaultProgram_2 = require(\"../VaultProgram\");\n\nclass MintFractionalShares extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      vault,\n      vaultAuthority,\n      fractionMint,\n      fractionTreasury,\n      fractionMintAuthority,\n      numberOfShares\n    } = params;\n    const data = Vault_1.NumberOfShareArgs.serialize({\n      instruction: VaultProgram_1.VaultInstructions.MintFractionalShares,\n      numberOfShares\n    });\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: fractionTreasury,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: fractionMint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: vault,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: fractionMintAuthority,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: vaultAuthority,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: VaultProgram_2.VaultProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.MintFractionalShares = MintFractionalShares;","map":{"version":3,"sources":["../../../src/transactions/MintFractionalShares.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,WAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,MAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAYA,MAAa,oBAAb,SAA0C,UAAA,CAAA,WAA1C,CAAqD;AACnD,EAAA,WAAA,CAAY,OAAZ,EAA4C,MAA5C,EAA+F;AAC7F,UAAM,OAAN;AACA,UAAM;AACJ,MAAA,KADI;AAEJ,MAAA,cAFI;AAGJ,MAAA,YAHI;AAIJ,MAAA,gBAJI;AAKJ,MAAA,qBALI;AAMJ,MAAA;AANI,QAOF,MAPJ;AASA,UAAM,IAAI,GAAG,OAAA,CAAA,iBAAA,CAAkB,SAAlB,CAA4B;AACvC,MAAA,WAAW,EAAE,cAAA,CAAA,iBAAA,CAAkB,oBADQ;AAEvC,MAAA;AAFuC,KAA5B,CAAb;AAKA,SAAK,GAAL,CACE,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AACzB,MAAA,IAAI,EAAE,CACJ;AACE,QAAA,MAAM,EAAE,gBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OADI,EAMJ;AACE,QAAA,MAAM,EAAE,YADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OANI,EAWJ;AACE,QAAA,MAAM,EAAE,KADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAXI,EAgBJ;AACE,QAAA,MAAM,EAAE,qBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAhBI,EAqBJ;AACE,QAAA,MAAM,EAAE,cADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OArBI,EA0BJ;AACE,QAAA,MAAM,EAAE,WAAA,CAAA,gBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OA1BI,CADmB;AAiCzB,MAAA,SAAS,EAAE,cAAA,CAAA,YAAA,CAAa,MAjCC;AAkCzB,MAAA;AAlCyB,KAA3B,CADF;AAsCD;;AAvDkD;;AAArD,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MintFractionalShares = void 0;\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst VaultProgram_1 = require(\"../VaultProgram\");\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst Vault_1 = require(\"../accounts/Vault\");\nconst VaultProgram_2 = require(\"../VaultProgram\");\nclass MintFractionalShares extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { vault, vaultAuthority, fractionMint, fractionTreasury, fractionMintAuthority, numberOfShares, } = params;\n        const data = Vault_1.NumberOfShareArgs.serialize({\n            instruction: VaultProgram_1.VaultInstructions.MintFractionalShares,\n            numberOfShares,\n        });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: fractionTreasury,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: fractionMint,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: vault,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: fractionMintAuthority,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: vaultAuthority,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: VaultProgram_2.VaultProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.MintFractionalShares = MintFractionalShares;\n//# sourceMappingURL=MintFractionalShares.js.map"]},"metadata":{},"sourceType":"script"}