{"ast":null,"code":"\"use strict\";\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RedeemShares = exports.RedeemSharesArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst spl_token_1 = require(\"@solana/spl-token\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst VaultProgram_1 = require(\"../VaultProgram\");\n\nconst VaultProgram_2 = require(\"../VaultProgram\");\n\nclass RedeemSharesArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = VaultProgram_1.VaultInstructions.RedeemShares;\n  }\n\n}\n\nexports.RedeemSharesArgs = RedeemSharesArgs;\n_a = RedeemSharesArgs;\nRedeemSharesArgs.SCHEMA = _a.struct([['instruction', 'u8']]);\n\nclass RedeemShares extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      vault,\n      burnAuthority,\n      fractionMint,\n      outstandingSharesAccount,\n      proceedsAccount,\n      redeemTreasury,\n      transferAuthority\n    } = params;\n    const data = RedeemSharesArgs.serialize();\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: outstandingSharesAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: proceedsAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: fractionMint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: redeemTreasury,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: transferAuthority,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: burnAuthority,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: vault,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: VaultProgram_2.VaultProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.RedeemShares = RedeemShares;","map":{"version":3,"sources":["../../../src/transactions/RedeemShares.ts"],"names":[],"mappings":";;;;;;;;;AAAA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAMA,MAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,MAAa,gBAAb,SAAsC,UAAA,CAAA,KAAA,CAAM,IAA5C,CAAgD;AAAhD,EAAA,WAAA,GAAA;;AAGE,SAAA,WAAA,GAAc,cAAA,CAAA,iBAAA,CAAkB,YAAhC;AACD;;AAJ+C;;AAAhD,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AACkB,gBAAA,CAAA,MAAA,GAAS,EAAI,CAAC,MAAL,CAAY,CAAC,CAAC,aAAD,EAAgB,IAAhB,CAAD,CAAZ,CAAT;;AAelB,MAAa,YAAb,SAAkC,UAAA,CAAA,WAAlC,CAA6C;AAC3C,EAAA,WAAA,CAAY,OAAZ,EAA4C,MAA5C,EAAqE;AACnE,UAAM,OAAN;AACA,UAAM;AACJ,MAAA,KADI;AAEJ,MAAA,aAFI;AAGJ,MAAA,YAHI;AAIJ,MAAA,wBAJI;AAKJ,MAAA,eALI;AAMJ,MAAA,cANI;AAOJ,MAAA;AAPI,QAQF,MARJ;AAUA,UAAM,IAAI,GAAG,gBAAgB,CAAC,SAAjB,EAAb;AAEA,SAAK,GAAL,CACE,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AACzB,MAAA,IAAI,EAAE,CACJ;AACE,QAAA,MAAM,EAAE,wBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OADI,EAMJ;AACE,QAAA,MAAM,EAAE,eADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OANI,EAWJ;AACE,QAAA,MAAM,EAAE,YADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAXI,EAgBJ;AACE,QAAA,MAAM,EAAE,cADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAhBI,EAqBJ;AACE,QAAA,MAAM,EAAE,iBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OArBI,EA2BJ;AACE,QAAA,MAAM,EAAE,aADV;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OA3BI,EAgCJ;AACE,QAAA,MAAM,EAAE,KADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAhCI,EAqCJ;AACE,QAAA,MAAM,EAAE,WAAA,CAAA,gBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OArCI,EA0CJ;AACE,QAAA,MAAM,EAAE,SAAA,CAAA,kBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OA1CI,CADmB;AAiDzB,MAAA,SAAS,EAAE,cAAA,CAAA,YAAA,CAAa,MAjDC;AAkDzB,MAAA;AAlDyB,KAA3B,CADF;AAsDD;;AArE0C;;AAA7C,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RedeemShares = exports.RedeemSharesArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst VaultProgram_1 = require(\"../VaultProgram\");\nconst VaultProgram_2 = require(\"../VaultProgram\");\nclass RedeemSharesArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = VaultProgram_1.VaultInstructions.RedeemShares;\n    }\n}\nexports.RedeemSharesArgs = RedeemSharesArgs;\n_a = RedeemSharesArgs;\nRedeemSharesArgs.SCHEMA = _a.struct([['instruction', 'u8']]);\nclass RedeemShares extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { vault, burnAuthority, fractionMint, outstandingSharesAccount, proceedsAccount, redeemTreasury, transferAuthority, } = params;\n        const data = RedeemSharesArgs.serialize();\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: outstandingSharesAccount,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: proceedsAccount,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: fractionMint,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: redeemTreasury,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: transferAuthority,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: burnAuthority,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: vault,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: VaultProgram_2.VaultProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.RedeemShares = RedeemShares;\n//# sourceMappingURL=RedeemShares.js.map"]},"metadata":{},"sourceType":"script"}