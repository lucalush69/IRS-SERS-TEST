{"ast":null,"code":"\"use strict\";\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RedeemParticipationBidV3 = exports.RedeemParticipationBidV3Args = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst mpl_token_metadata_1 = require(\"@metaplex-foundation/mpl-token-metadata\");\n\nconst mpl_token_vault_1 = require(\"@metaplex-foundation/mpl-token-vault\");\n\nconst spl_token_1 = require(\"@solana/spl-token\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\n\nclass RedeemParticipationBidV3Args extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = 19;\n  }\n\n}\n\nexports.RedeemParticipationBidV3Args = RedeemParticipationBidV3Args;\n_a = RedeemParticipationBidV3Args;\nRedeemParticipationBidV3Args.SCHEMA = _a.struct([['instruction', 'u8'], ['winIndex', {\n  kind: 'option',\n  type: 'u64'\n}]]);\n\nclass RedeemParticipationBidV3 extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      feePayer\n    } = options;\n    const {\n      store,\n      vault,\n      auction,\n      auctionExtended,\n      auctionManager,\n      bidRedemption,\n      bidMetadata,\n      safetyDepositTokenStore,\n      destination,\n      safetyDeposit,\n      bidder,\n      safetyDepositConfig,\n      metadata,\n      prizeTrackingTicket,\n      newMetadata,\n      newEdition,\n      masterEdition,\n      newMint,\n      editionMark,\n      winIndex,\n      transferAuthority,\n      acceptPaymentAccount,\n      tokenPaymentAccount\n    } = params;\n    const data = RedeemParticipationBidV3Args.serialize({\n      winIndex\n    });\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: auctionManager,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: safetyDepositTokenStore,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: destination,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: bidRedemption,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: safetyDeposit,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: vault,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: safetyDepositConfig,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: auction,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: bidMetadata,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: bidder,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: mpl_token_vault_1.VaultProgram.PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: mpl_token_metadata_1.MetadataProgram.PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: store,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: transferAuthority,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: acceptPaymentAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: tokenPaymentAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: prizeTrackingTicket,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: newMetadata,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: newEdition,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: masterEdition,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: newMint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: editionMark,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: metadata,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: auctionExtended,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.RedeemParticipationBidV3 = RedeemParticipationBidV3;","map":{"version":3,"sources":["../../../src/transactions/RedeemParticipationBidV3.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RedeemParticipationBidV3 = exports.RedeemParticipationBidV3Args = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst mpl_token_metadata_1 = require(\"@metaplex-foundation/mpl-token-metadata\");\nconst mpl_token_vault_1 = require(\"@metaplex-foundation/mpl-token-vault\");\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass RedeemParticipationBidV3Args extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 19;\n    }\n}\nexports.RedeemParticipationBidV3Args = RedeemParticipationBidV3Args;\n_a = RedeemParticipationBidV3Args;\nRedeemParticipationBidV3Args.SCHEMA = _a.struct([\n    ['instruction', 'u8'],\n    ['winIndex', { kind: 'option', type: 'u64' }],\n]);\nclass RedeemParticipationBidV3 extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { feePayer } = options;\n        const { store, vault, auction, auctionExtended, auctionManager, bidRedemption, bidMetadata, safetyDepositTokenStore, destination, safetyDeposit, bidder, safetyDepositConfig, metadata, prizeTrackingTicket, newMetadata, newEdition, masterEdition, newMint, editionMark, winIndex, transferAuthority, acceptPaymentAccount, tokenPaymentAccount, } = params;\n        const data = RedeemParticipationBidV3Args.serialize({ winIndex });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: auctionManager,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: safetyDepositTokenStore,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: destination,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: bidRedemption,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: safetyDeposit,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: vault,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: safetyDepositConfig,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: bidMetadata,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: bidder,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: feePayer,\n                    isSigner: true,\n                    isWritable: true,\n                },\n                {\n                    pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_token_vault_1.VaultProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_token_metadata_1.MetadataProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: store,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SystemProgram.programId,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: transferAuthority,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: acceptPaymentAccount,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: tokenPaymentAccount,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: prizeTrackingTicket,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: newMetadata,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: newEdition,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: masterEdition,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: newMint,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: editionMark,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: feePayer,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: metadata,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: auctionExtended,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.RedeemParticipationBidV3 = RedeemParticipationBidV3;\n//# sourceMappingURL=RedeemParticipationBidV3.js.map"]},"metadata":{},"sourceType":"script"}