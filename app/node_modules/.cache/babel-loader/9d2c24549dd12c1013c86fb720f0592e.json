{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuctionWinnerTokenTypeTracker = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst buffer_1 = require(\"buffer\");\n\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\n\nclass AuctionWinnerTokenTypeTracker extends mpl_core_1.Account {\n  constructor(pubkey, info) {\n    super(pubkey, info);\n\n    if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!AuctionWinnerTokenTypeTracker.isCompatible(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = deserialize(this.info.data);\n  }\n\n  static isCompatible(data) {\n    return data[0] === MetaplexProgram_1.MetaplexKey.AuctionWinnerTokenTypeTrackerV1;\n  }\n\n  static getPDA(auctionManager) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return MetaplexProgram_1.MetaplexProgram.findProgramAddress([buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX), MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(), new web3_js_1.PublicKey(auctionManager).toBuffer(), buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.TOTALS)]);\n    });\n  }\n\n}\n\nexports.AuctionWinnerTokenTypeTracker = AuctionWinnerTokenTypeTracker;\n\nconst deserialize = buffer => {\n  const data = {\n    key: MetaplexProgram_1.MetaplexKey.SafetyDepositConfigV1,\n    amountType: buffer[1],\n    lengthType: buffer[2],\n    amountRanges: []\n  };\n  const lengthOfArray = new bn_js_1.default(buffer.slice(3, 7), 'le');\n  let offset = 7;\n\n  for (let i = 0; i < lengthOfArray.toNumber(); i++) {\n    const amount = (0, mpl_core_1.getBNFromData)(buffer, offset, data.amountType);\n    offset += data.amountType;\n    const length = (0, mpl_core_1.getBNFromData)(buffer, offset, data.lengthType);\n    offset += data.lengthType;\n    data.amountRanges.push({\n      amount,\n      length\n    });\n  }\n\n  return data;\n};","map":{"version":3,"sources":["../../../src/accounts/AuctionWinnerTokenTypeTracker.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AAQA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,MAAA,iBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAUA,MAAa,6BAAb,SAAmD,UAAA,CAAA,OAAnD,CAA6F;AAC3F,EAAA,WAAA,CAAY,MAAZ,EAAkC,IAAlC,EAA2D;AACzD,UAAM,MAAN,EAAc,IAAd;;AAEA,QAAI,CAAC,KAAK,WAAL,CAAiB,iBAAA,CAAA,eAAA,CAAgB,MAAjC,CAAL,EAA+C;AAC7C,YAAM,CAAA,GAAA,UAAA,CAAA,mBAAA,GAAN;AACD;;AAED,QAAI,CAAC,6BAA6B,CAAC,YAA9B,CAA2C,KAAK,IAAL,CAAU,IAArD,CAAL,EAAiE;AAC/D,YAAM,CAAA,GAAA,UAAA,CAAA,0BAAA,GAAN;AACD;;AAED,SAAK,IAAL,GAAY,WAAW,CAAC,KAAK,IAAL,CAAU,IAAX,CAAvB;AACD;;AAEkB,SAAZ,YAAY,CAAC,IAAD,EAAa;AAC9B,WAAO,IAAI,CAAC,CAAD,CAAJ,KAAY,iBAAA,CAAA,WAAA,CAAY,+BAA/B;AACD;;AAEkB,SAAN,MAAM,CAAC,cAAD,EAA6B;;AAC9C,aAAO,iBAAA,CAAA,eAAA,CAAgB,kBAAhB,CAAmC,CACxC,QAAA,CAAA,MAAA,CAAO,IAAP,CAAY,iBAAA,CAAA,eAAA,CAAgB,MAA5B,CADwC,EAExC,iBAAA,CAAA,eAAA,CAAgB,MAAhB,CAAuB,QAAvB,EAFwC,EAGxC,IAAI,SAAA,CAAA,SAAJ,CAAc,cAAd,EAA8B,QAA9B,EAHwC,EAIxC,QAAA,CAAA,MAAA,CAAO,IAAP,CAAY,iBAAA,CAAA,eAAA,CAAgB,MAA5B,CAJwC,CAAnC,CAAP;AAMD,K;AAAA;;AA1B0F;;AAA7F,OAAA,CAAA,6BAAA,GAAA,6BAAA;;AA6BA,MAAM,WAAW,GAAI,MAAD,IAAmB;AACrC,QAAM,IAAI,GAAsC;AAC9C,IAAA,GAAG,EAAE,iBAAA,CAAA,WAAA,CAAY,qBAD6B;AAE9C,IAAA,UAAU,EAAE,MAAM,CAAC,CAAD,CAF4B;AAG9C,IAAA,UAAU,EAAE,MAAM,CAAC,CAAD,CAH4B;AAI9C,IAAA,YAAY,EAAE;AAJgC,GAAhD;AAOA,QAAM,aAAa,GAAG,IAAI,OAAA,CAAA,OAAJ,CAAO,MAAM,CAAC,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAP,EAA2B,IAA3B,CAAtB;AACA,MAAI,MAAM,GAAG,CAAb;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,aAAa,CAAC,QAAd,EAApB,EAA8C,CAAC,EAA/C,EAAmD;AACjD,UAAM,MAAM,GAAG,CAAA,GAAA,UAAA,CAAA,aAAA,EAAc,MAAd,EAAsB,MAAtB,EAA8B,IAAI,CAAC,UAAnC,CAAf;AACA,IAAA,MAAM,IAAI,IAAI,CAAC,UAAf;AACA,UAAM,MAAM,GAAG,CAAA,GAAA,UAAA,CAAA,aAAA,EAAc,MAAd,EAAsB,MAAtB,EAA8B,IAAI,CAAC,UAAnC,CAAf;AACA,IAAA,MAAM,IAAI,IAAI,CAAC,UAAf;AACA,IAAA,IAAI,CAAC,YAAL,CAAkB,IAAlB,CAAuB;AAAE,MAAA,MAAF;AAAU,MAAA;AAAV,KAAvB;AACD;;AAED,SAAO,IAAP;AACD,CApBD","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuctionWinnerTokenTypeTracker = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst buffer_1 = require(\"buffer\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass AuctionWinnerTokenTypeTracker extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!AuctionWinnerTokenTypeTracker.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.AuctionWinnerTokenTypeTrackerV1;\n    }\n    static getPDA(auctionManager) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return MetaplexProgram_1.MetaplexProgram.findProgramAddress([\n                buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX),\n                MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(),\n                new web3_js_1.PublicKey(auctionManager).toBuffer(),\n                buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.TOTALS),\n            ]);\n        });\n    }\n}\nexports.AuctionWinnerTokenTypeTracker = AuctionWinnerTokenTypeTracker;\nconst deserialize = (buffer) => {\n    const data = {\n        key: MetaplexProgram_1.MetaplexKey.SafetyDepositConfigV1,\n        amountType: buffer[1],\n        lengthType: buffer[2],\n        amountRanges: [],\n    };\n    const lengthOfArray = new bn_js_1.default(buffer.slice(3, 7), 'le');\n    let offset = 7;\n    for (let i = 0; i < lengthOfArray.toNumber(); i++) {\n        const amount = (0, mpl_core_1.getBNFromData)(buffer, offset, data.amountType);\n        offset += data.amountType;\n        const length = (0, mpl_core_1.getBNFromData)(buffer, offset, data.lengthType);\n        offset += data.lengthType;\n        data.amountRanges.push({ amount, length });\n    }\n    return data;\n};\n//# sourceMappingURL=AuctionWinnerTokenTypeTracker.js.map"]},"metadata":{},"sourceType":"script"}