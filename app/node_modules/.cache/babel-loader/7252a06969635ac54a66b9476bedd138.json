{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SafetyDepositBox = exports.SafetyDepositBoxData = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst VaultProgram_1 = require(\"../VaultProgram\");\n\nconst buffer_1 = require(\"buffer\");\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nclass SafetyDepositBoxData extends mpl_core_1.Borsh.Data {\n  constructor(args) {\n    super(args);\n    this.key = VaultProgram_1.VaultKey.SafetyDepositBoxV1;\n  }\n\n}\n\nexports.SafetyDepositBoxData = SafetyDepositBoxData;\n_a = SafetyDepositBoxData;\nSafetyDepositBoxData.SCHEMA = _a.struct([['key', 'u8'], ['vault', 'pubkeyAsString'], ['tokenMint', 'pubkeyAsString'], ['store', 'pubkeyAsString'], ['order', 'u8']]);\n\nclass SafetyDepositBox extends mpl_core_1.Account {\n  constructor(key, info) {\n    super(key, info);\n\n    if (!this.assertOwner(VaultProgram_1.VaultProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!SafetyDepositBox.isCompatible(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = SafetyDepositBoxData.deserialize(this.info.data);\n  }\n\n  static getPDA(vault, mint) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return VaultProgram_1.VaultProgram.findProgramAddress([buffer_1.Buffer.from(VaultProgram_1.VaultProgram.PREFIX), new web3_js_1.PublicKey(vault).toBuffer(), new web3_js_1.PublicKey(mint).toBuffer()]);\n    });\n  }\n\n  static isCompatible(data) {\n    return data[0] === VaultProgram_1.VaultKey.SafetyDepositBoxV1;\n  }\n\n}\n\nexports.SafetyDepositBox = SafetyDepositBox;","map":{"version":3,"sources":["../../../src/accounts/SafetyDepositBox.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AAeA,MAAa,oBAAb,SAA0C,UAAA,CAAA,KAAA,CAAM,IAAhD,CAA0D;AAoBxD,EAAA,WAAA,CAAY,IAAZ,EAAsB;AACpB,UAAM,IAAN;AACA,SAAK,GAAL,GAAW,cAAA,CAAA,QAAA,CAAS,kBAApB;AACD;;AAvBuD;;AAA1D,OAAA,CAAA,oBAAA,GAAA,oBAAA;;AACkB,oBAAA,CAAA,MAAA,GAAS,EAAI,CAAC,MAAL,CAAY,CACnC,CAAC,KAAD,EAAQ,IAAR,CADmC,EAEnC,CAAC,OAAD,EAAU,gBAAV,CAFmC,EAGnC,CAAC,WAAD,EAAc,gBAAd,CAHmC,EAInC,CAAC,OAAD,EAAU,gBAAV,CAJmC,EAKnC,CAAC,OAAD,EAAU,IAAV,CALmC,CAAZ,CAAT;;AAyBlB,MAAa,gBAAb,SAAsC,UAAA,CAAA,OAAtC,CAAmE;AACjE,EAAA,WAAA,CAAY,GAAZ,EAA+B,IAA/B,EAAwD;AACtD,UAAM,GAAN,EAAW,IAAX;;AAEA,QAAI,CAAC,KAAK,WAAL,CAAiB,cAAA,CAAA,YAAA,CAAa,MAA9B,CAAL,EAA4C;AAC1C,YAAM,CAAA,GAAA,UAAA,CAAA,mBAAA,GAAN;AACD;;AAED,QAAI,CAAC,gBAAgB,CAAC,YAAjB,CAA8B,KAAK,IAAL,CAAU,IAAxC,CAAL,EAAoD;AAClD,YAAM,CAAA,GAAA,UAAA,CAAA,0BAAA,GAAN;AACD;;AAED,SAAK,IAAL,GAAY,oBAAoB,CAAC,WAArB,CAAiC,KAAK,IAAL,CAAU,IAA3C,CAAZ;AACD;;AAEkB,SAAN,MAAM,CAAC,KAAD,EAAsB,IAAtB,EAAwC;;AACzD,aAAO,cAAA,CAAA,YAAA,CAAa,kBAAb,CAAgC,CACrC,QAAA,CAAA,MAAA,CAAO,IAAP,CAAY,cAAA,CAAA,YAAA,CAAa,MAAzB,CADqC,EAErC,IAAI,SAAA,CAAA,SAAJ,CAAc,KAAd,EAAqB,QAArB,EAFqC,EAGrC,IAAI,SAAA,CAAA,SAAJ,CAAc,IAAd,EAAoB,QAApB,EAHqC,CAAhC,CAAP;AAKD,K;AAAA;;AAEkB,SAAZ,YAAY,CAAC,IAAD,EAAa;AAC9B,WAAO,IAAI,CAAC,CAAD,CAAJ,KAAY,cAAA,CAAA,QAAA,CAAS,kBAA5B;AACD;;AAzBgE;;AAAnE,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafetyDepositBox = exports.SafetyDepositBoxData = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst VaultProgram_1 = require(\"../VaultProgram\");\nconst buffer_1 = require(\"buffer\");\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nclass SafetyDepositBoxData extends mpl_core_1.Borsh.Data {\n    constructor(args) {\n        super(args);\n        this.key = VaultProgram_1.VaultKey.SafetyDepositBoxV1;\n    }\n}\nexports.SafetyDepositBoxData = SafetyDepositBoxData;\n_a = SafetyDepositBoxData;\nSafetyDepositBoxData.SCHEMA = _a.struct([\n    ['key', 'u8'],\n    ['vault', 'pubkeyAsString'],\n    ['tokenMint', 'pubkeyAsString'],\n    ['store', 'pubkeyAsString'],\n    ['order', 'u8'],\n]);\nclass SafetyDepositBox extends mpl_core_1.Account {\n    constructor(key, info) {\n        super(key, info);\n        if (!this.assertOwner(VaultProgram_1.VaultProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!SafetyDepositBox.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = SafetyDepositBoxData.deserialize(this.info.data);\n    }\n    static getPDA(vault, mint) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return VaultProgram_1.VaultProgram.findProgramAddress([\n                buffer_1.Buffer.from(VaultProgram_1.VaultProgram.PREFIX),\n                new web3_js_1.PublicKey(vault).toBuffer(),\n                new web3_js_1.PublicKey(mint).toBuffer(),\n            ]);\n        });\n    }\n    static isCompatible(data) {\n        return data[0] === VaultProgram_1.VaultKey.SafetyDepositBoxV1;\n    }\n}\nexports.SafetyDepositBox = SafetyDepositBox;\n//# sourceMappingURL=SafetyDepositBox.js.map"]},"metadata":{},"sourceType":"script"}