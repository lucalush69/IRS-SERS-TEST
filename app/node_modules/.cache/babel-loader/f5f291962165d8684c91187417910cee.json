{"ast":null,"code":"\"use strict\";\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InitVault = exports.InitVaultArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst spl_token_1 = require(\"@solana/spl-token\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst VaultProgram_1 = require(\"../VaultProgram\");\n\nconst VaultProgram_2 = require(\"../VaultProgram\");\n\nclass InitVaultArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = VaultProgram_1.VaultInstructions.InitVault;\n    this.allowFurtherShareCreation = false;\n  }\n\n}\n\nexports.InitVaultArgs = InitVaultArgs;\n_a = InitVaultArgs;\nInitVaultArgs.SCHEMA = _a.struct([['instruction', 'u8'], ['allowFurtherShareCreation', 'u8']]);\n\nclass InitVault extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      vault,\n      vaultAuthority,\n      fractionalMint,\n      redeemTreasury,\n      fractionalTreasury,\n      pricingLookupAddress,\n      allowFurtherShareCreation\n    } = params;\n    const data = InitVaultArgs.serialize({\n      allowFurtherShareCreation\n    });\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: fractionalMint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: redeemTreasury,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: fractionalTreasury,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: vault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: vaultAuthority,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: pricingLookupAddress,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: VaultProgram_2.VaultProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.InitVault = InitVault;","map":{"version":3,"sources":["../../../src/transactions/InitVault.ts"],"names":[],"mappings":";;;;;;;;;AAAA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAMA,MAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,MAAa,aAAb,SAAmC,UAAA,CAAA,KAAA,CAAM,IAAzC,CAAqF;AAArF,EAAA,WAAA,GAAA;;AAME,SAAA,WAAA,GAAc,cAAA,CAAA,iBAAA,CAAkB,SAAhC;AACA,SAAA,yBAAA,GAA4B,KAA5B;AACD;;AARoF;;AAArF,OAAA,CAAA,aAAA,GAAA,aAAA;;AACkB,aAAA,CAAA,MAAA,GAAS,EAAI,CAAC,MAAL,CAAY,CACnC,CAAC,aAAD,EAAgB,IAAhB,CADmC,EAEnC,CAAC,2BAAD,EAA8B,IAA9B,CAFmC,CAAZ,CAAT;;AAmBlB,MAAa,SAAb,SAA+B,UAAA,CAAA,WAA/B,CAA0C;AACxC,EAAA,WAAA,CAAY,OAAZ,EAA4C,MAA5C,EAAmE;AACjE,UAAM,OAAN;AACA,UAAM;AACJ,MAAA,KADI;AAEJ,MAAA,cAFI;AAGJ,MAAA,cAHI;AAIJ,MAAA,cAJI;AAKJ,MAAA,kBALI;AAMJ,MAAA,oBANI;AAOJ,MAAA;AAPI,QAQF,MARJ;AAUA,UAAM,IAAI,GAAG,aAAa,CAAC,SAAd,CAAwB;AAAE,MAAA;AAAF,KAAxB,CAAb;AAEA,SAAK,GAAL,CACE,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AACzB,MAAA,IAAI,EAAE,CACJ;AACE,QAAA,MAAM,EAAE,cADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OADI,EAMJ;AACE,QAAA,MAAM,EAAE,cADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OANI,EAWJ;AACE,QAAA,MAAM,EAAE,kBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAXI,EAgBJ;AACE,QAAA,MAAM,EAAE,KADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAhBI,EAqBJ;AACE,QAAA,MAAM,EAAE,cADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OArBI,EA0BJ;AACE,QAAA,MAAM,EAAE,oBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OA1BI,EA+BJ;AACE,QAAA,MAAM,EAAE,WAAA,CAAA,gBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OA/BI,EAqCJ;AACE,QAAA,MAAM,EAAE,SAAA,CAAA,kBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OArCI,CADmB;AA4CzB,MAAA,SAAS,EAAE,cAAA,CAAA,YAAA,CAAa,MA5CC;AA6CzB,MAAA;AA7CyB,KAA3B,CADF;AAiDD;;AAhEuC;;AAA1C,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InitVault = exports.InitVaultArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst VaultProgram_1 = require(\"../VaultProgram\");\nconst VaultProgram_2 = require(\"../VaultProgram\");\nclass InitVaultArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = VaultProgram_1.VaultInstructions.InitVault;\n        this.allowFurtherShareCreation = false;\n    }\n}\nexports.InitVaultArgs = InitVaultArgs;\n_a = InitVaultArgs;\nInitVaultArgs.SCHEMA = _a.struct([\n    ['instruction', 'u8'],\n    ['allowFurtherShareCreation', 'u8'],\n]);\nclass InitVault extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { vault, vaultAuthority, fractionalMint, redeemTreasury, fractionalTreasury, pricingLookupAddress, allowFurtherShareCreation, } = params;\n        const data = InitVaultArgs.serialize({ allowFurtherShareCreation });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: fractionalMint,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: redeemTreasury,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: fractionalTreasury,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: vault,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: vaultAuthority,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: pricingLookupAddress,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: VaultProgram_2.VaultProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.InitVault = InitVault;\n//# sourceMappingURL=InitVault.js.map"]},"metadata":{},"sourceType":"script"}