{"ast":null,"code":"\"use strict\";\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StartAuction = exports.StartAuctionArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst mpl_auction_1 = require(\"@metaplex-foundation/mpl-auction\");\n\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\n\nclass StartAuctionArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = 5;\n  }\n\n}\n\nexports.StartAuctionArgs = StartAuctionArgs;\n_a = StartAuctionArgs;\nStartAuctionArgs.SCHEMA = _a.struct([['instruction', 'u8']]);\n\nclass StartAuction extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      store,\n      auction,\n      auctionManager,\n      auctionManagerAuthority\n    } = params;\n    const data = StartAuctionArgs.serialize();\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: auctionManager,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: auction,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: auctionManagerAuthority,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: store,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: mpl_auction_1.AuctionProgram.PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.StartAuction = StartAuction;","map":{"version":3,"sources":["../../../src/transactions/StartAuction.ts"],"names":[],"mappings":";;;;;;;;;AAAA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAMA,MAAA,aAAA,GAAA,OAAA,CAAA,kCAAA,CAAA;;AACA,MAAA,iBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAGA,MAAa,gBAAb,SAAsC,UAAA,CAAA,KAAA,CAAM,IAA5C,CAAgD;AAAhD,EAAA,WAAA,GAAA;;AAGE,SAAA,WAAA,GAAc,CAAd;AACD;;AAJ+C;;AAAhD,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AACkB,gBAAA,CAAA,MAAA,GAAS,EAAI,CAAC,MAAL,CAAY,CAAC,CAAC,aAAD,EAAgB,IAAhB,CAAD,CAAZ,CAAT;;AAWlB,MAAa,YAAb,SAAkC,UAAA,CAAA,WAAlC,CAA6C;AAC3C,EAAA,WAAA,CAAY,OAAZ,EAA4C,MAA5C,EAAuF;AACrF,UAAM,OAAN;AACA,UAAM;AAAE,MAAA,KAAF;AAAS,MAAA,OAAT;AAAkB,MAAA,cAAlB;AAAkC,MAAA;AAAlC,QAA8D,MAApE;AAEA,UAAM,IAAI,GAAG,gBAAgB,CAAC,SAAjB,EAAb;AAEA,SAAK,GAAL,CACE,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AACzB,MAAA,IAAI,EAAE,CACJ;AACE,QAAA,MAAM,EAAE,cADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OADI,EAMJ;AACE,QAAA,MAAM,EAAE,OADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OANI,EAWJ;AACE,QAAA,MAAM,EAAE,uBADV;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAXI,EAgBJ;AACE,QAAA,MAAM,EAAE,KADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OAhBI,EAqBJ;AACE,QAAA,MAAM,EAAE,aAAA,CAAA,cAAA,CAAe,MADzB;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OArBI,EA0BJ;AACE,QAAA,MAAM,EAAE,SAAA,CAAA,mBADV;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAE;AAHd,OA1BI,CADmB;AAiCzB,MAAA,SAAS,EAAE,iBAAA,CAAA,eAAA,CAAgB,MAjCF;AAkCzB,MAAA;AAlCyB,KAA3B,CADF;AAsCD;;AA7C0C;;AAA7C,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StartAuction = exports.StartAuctionArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst mpl_auction_1 = require(\"@metaplex-foundation/mpl-auction\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass StartAuctionArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 5;\n    }\n}\nexports.StartAuctionArgs = StartAuctionArgs;\n_a = StartAuctionArgs;\nStartAuctionArgs.SCHEMA = _a.struct([['instruction', 'u8']]);\nclass StartAuction extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { store, auction, auctionManager, auctionManagerAuthority } = params;\n        const data = StartAuctionArgs.serialize();\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: auctionManager,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auctionManagerAuthority,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: store,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_auction_1.AuctionProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.StartAuction = StartAuction;\n//# sourceMappingURL=StartAuction.js.map"]},"metadata":{},"sourceType":"script"}